[{"/Users/jingmeimei/Desktop/webBlog/webblog/src/index.js":"1","/Users/jingmeimei/Desktop/webBlog/webblog/src/reportWebVitals.js":"2","/Users/jingmeimei/Desktop/webBlog/webblog/src/App.js":"3","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/Header/Header.js":"4","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/header/Header.js":"5","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/right/Right.js":"6","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/left/Left.js":"7","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/left/UserInfo.js":"8","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/left/ToolBar.js":"9","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/left/Activation.js":"10","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/right/People.js":"11","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/right/HotPost.js":"12","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/right/HotCommentPost.js":"13","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/right/Notice.js":"14","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/index.js":"15","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/homePage/HomePage.js":"16","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/login/Login.js":"17","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/layout/Layout.js":"18","/Users/jingmeimei/Desktop/webBlog/webblog/src/routeConfig.js":"19","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/allActive/Post.js":"20","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/chatRoom/ChatRoom.js":"21","/Users/jingmeimei/Desktop/webBlog/webblog/src/importComponent.js":"22","/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/AsyncComponent.js":"23","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/index.js":"24","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/common/tag.list.js":"25","/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/fetch/index.js":"26","/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/fetch/fetch.js":"27","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/common/register.js":"28","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/login/Register.js":"29","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/common/login.js":"30","/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/TagColor.js":"31","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/service.js":"32","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/common/loginout.js":"33","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/sendActive/SendActive.js":"34","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/activeDetail/ActiveDetail.js":"35","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/activeDetail/comment/Comment.js":"36","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/avatarList/AvatarList.js":"37","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/PersonalInfo.js":"38","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/basicInfo/BasicInfo.js":"39","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/basicInfo/TagEdit.js":"40","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/addUserModal/AddUserModal.js":"41","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/myUsers/MyUserList.js":"42","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/chatRoom/Socket.js":"43","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/likeList/LikeList.js":"44","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/commentList/CommentList.js":"45","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/DataAnalysize.js":"46","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/Area.js":"47","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/getLocation.js":"48","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/userLikeDatas.js":"49","/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/userLikeDatas.js":"50","/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/get.js":"51","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/getTextWords.js":"52","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/UserActive.js":"53","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/UserTags.js":"54","/Users/jingmeimei/Desktop/webBlog/webblog/src/store/storeClasee.js":"55","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/UserKeyWords.js":"56","/Users/jingmeimei/Desktop/webBlog/webblog/src/resultData.js":"57"},{"size":696,"mtime":1617375656297,"results":"58","hashOfConfig":"59"},{"size":362,"mtime":1611713927994,"results":"60","hashOfConfig":"59"},{"size":240,"mtime":1615286563362,"results":"61","hashOfConfig":"59"},{"size":2811,"mtime":1611828295728,"results":"62","hashOfConfig":"63"},{"size":11418,"mtime":1617687782916,"results":"64","hashOfConfig":"59"},{"size":462,"mtime":1620613221853,"results":"65","hashOfConfig":"59"},{"size":415,"mtime":1612247404037,"results":"66","hashOfConfig":"59"},{"size":2947,"mtime":1617011113110,"results":"67","hashOfConfig":"59"},{"size":1982,"mtime":1617770096408,"results":"68","hashOfConfig":"59"},{"size":3253,"mtime":1617016440665,"results":"69","hashOfConfig":"59"},{"size":2920,"mtime":1620613165266,"results":"70","hashOfConfig":"59"},{"size":1702,"mtime":1616314972472,"results":"71","hashOfConfig":"59"},{"size":1717,"mtime":1616315320723,"results":"72","hashOfConfig":"59"},{"size":628,"mtime":1612237394408,"results":"73","hashOfConfig":"59"},{"size":710,"mtime":1616981769727,"results":"74","hashOfConfig":"59"},{"size":1887,"mtime":1617687900834,"results":"75","hashOfConfig":"59"},{"size":5119,"mtime":1615801203377,"results":"76","hashOfConfig":"59"},{"size":631,"mtime":1614912534499,"results":"77","hashOfConfig":"59"},{"size":321,"mtime":1616981910321,"results":"78","hashOfConfig":"59"},{"size":8143,"mtime":1620203238678,"results":"79","hashOfConfig":"59"},{"size":8308,"mtime":1616857708064,"results":"80","hashOfConfig":"59"},{"size":1015,"mtime":1616919912634,"results":"81","hashOfConfig":"59"},{"size":1264,"mtime":1614921096906,"results":"82","hashOfConfig":"59"},{"size":227,"mtime":1617106326541,"results":"83","hashOfConfig":"59"},{"size":160,"mtime":1615209032877,"results":"84","hashOfConfig":"59"},{"size":2524,"mtime":1615773234359,"results":"85","hashOfConfig":"59"},{"size":3928,"mtime":1615209253949,"results":"86","hashOfConfig":"59"},{"size":153,"mtime":1615209032875,"results":"87","hashOfConfig":"59"},{"size":9434,"mtime":1616311045789,"results":"88","hashOfConfig":"59"},{"size":147,"mtime":1615342157980,"results":"89","hashOfConfig":"59"},{"size":818,"mtime":1617263034038,"results":"90","hashOfConfig":"59"},{"size":3506,"mtime":1617271636450,"results":"91","hashOfConfig":"59"},{"size":157,"mtime":1615426247328,"results":"92","hashOfConfig":"59"},{"size":566,"mtime":1615514406190,"results":"93","hashOfConfig":"59"},{"size":6551,"mtime":1616850445275,"results":"94","hashOfConfig":"59"},{"size":1680,"mtime":1617689559475,"results":"95","hashOfConfig":"59"},{"size":451,"mtime":1615896442272,"results":"96","hashOfConfig":"59"},{"size":1333,"mtime":1617688644434,"results":"97","hashOfConfig":"59"},{"size":11301,"mtime":1616723585644,"results":"98","hashOfConfig":"59"},{"size":3871,"mtime":1616303096671,"results":"99","hashOfConfig":"59"},{"size":1702,"mtime":1616489056392,"results":"100","hashOfConfig":"59"},{"size":3939,"mtime":1617786979718,"results":"101","hashOfConfig":"59"},{"size":1063,"mtime":1616488683774,"results":"102","hashOfConfig":"59"},{"size":1650,"mtime":1616549310668,"results":"103","hashOfConfig":"59"},{"size":1671,"mtime":1616549564546,"results":"104","hashOfConfig":"59"},{"size":1593,"mtime":1617332309821,"results":"105","hashOfConfig":"59"},{"size":9343,"mtime":1617688882098,"results":"106","hashOfConfig":"59"},{"size":179,"mtime":1617002578992,"results":"107","hashOfConfig":"59"},{"size":12675,"mtime":1621258936990,"results":"108","hashOfConfig":"59"},{"size":4600,"mtime":1617107051898,"results":"109","hashOfConfig":"59"},{"size":2396,"mtime":1617177838729,"results":"110","hashOfConfig":"59"},{"size":174,"mtime":1617106265683,"results":"111","hashOfConfig":"59"},{"size":3425,"mtime":1621258937004,"results":"112","hashOfConfig":"59"},{"size":2375,"mtime":1621259079432,"results":"113","hashOfConfig":"59"},{"size":353,"mtime":1617673318812,"results":"114","hashOfConfig":"59"},{"size":2893,"mtime":1621258936999,"results":"115","hashOfConfig":"59"},{"size":5483,"mtime":1617673678991,"results":"116","hashOfConfig":"59"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},"11kwk41",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"120"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"6sm2c",{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"120"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"120"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"120"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"120"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"/Users/jingmeimei/Desktop/webBlog/webblog/src/index.js",["260","261"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport css from './index.less';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { configure } from 'mobx';\n\nimport { Provider } from 'mobx-react';\nimport Store from './store/storeClasee';\nconst stores = { Store };\nReactDOM.render(\n  <Provider {...stores}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["262","263"],"/Users/jingmeimei/Desktop/webBlog/webblog/src/reportWebVitals.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/App.js",["264"],"import React from 'react';\nimport logo from './logo.svg';\nimport css from './App.less';\nimport MyRoute from './page/index';\n\nfunction App() {\n  return (\n    <div className={css.App}>\n      <MyRoute />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/Header/Header.js",["265"],"/Users/jingmeimei/Desktop/webBlog/webblog/src/component/header/Header.js",["266","267","268","269"],"import React, { Component } from 'react'\nimport './Header.css';\nimport { Col, Row, Input, Avatar, Dropdown, Menu, Button, Tooltip, message, Select, List, Empty } from 'antd';\nimport { EnvironmentOutlined, CloudTwoTone, SkinTwoTone, AntDesignOutlined, SearchOutlined, AreaChartOutlined, UserAddOutlined, EnvironmentTwoTone } from '@ant-design/icons/lib/icons';\nimport { getUserInfo, searchUsers } from '@/remote';\nimport { loginout } from '@/remote';\nimport RouteConfig from '../../routeConfig';\nimport AddUserModal from '@/component/addUserModal/AddUserModal';\nimport { withRouter } from 'react-router';\n\nconst { Search } = Input;\nconst { Option } = Select;\nconst AMap = window.AMap;\nclass Header extends Component {\n    state = {\n        userInfo: {},\n        userList: [],\n        showBox: false,\n        loading: false,\n        search: '',\n        selectedKeys: '',\n        city: '',\n        weather: '',\n    };\n    componentDidMount = () => {\n        this.getUserInfos();\n        this.getCity();\n\n    };\n    getUserInfos = async () => {\n        const userId = window.localStorage.getItem('userId');\n        try {\n            const resp = await getUserInfo({ userId: +userId });\n            if (resp.status === 200) {\n                this.setState({\n                    userInfo: Object.assign({}, resp.data)\n                });\n            }\n\n        } catch (e) {\n\n        } finally {\n            this.setState({\n                loading: true\n            });\n        }\n    };\n    loginOut = async () => {\n        const resp = await loginout({ username: this.state.userInfo.username });\n        if (resp.status === 200) {\n            message.success('退出登录成功');\n            window.localStorage.clear();\n            this.props.history.push(RouteConfig.login);\n        }\n    };\n    handleChange = (e) => {\n        this.setState({\n            search: e.target.value\n        })\n    }\n    searchUsers = async () => {\n        this.setState({\n            showBox: true\n        })\n        try {\n            const resp = await searchUsers({ search: this.state.search });\n            if (resp.status === 200) {\n                this.setState({\n                    userList: resp.data.list || []\n                })\n            }\n        } catch (e) {\n\n        } finally {\n            this.setState({\n                loading: true\n            })\n        }\n    }\n    hideBox = () => {\n        this.setState({\n            showBox: false,\n        })\n    }\n    adduser = (e, userId) => {\n        this.refs.addUserModal.showModal(true, userId);\n    }\n    changeSkin = (item, key) => {\n        this.setState({\n            selectedKeys: item.key\n        });\n        this.props.changeSkin(item.key);\n    };\n    getCity = () => {\n        let mapObj = null;\n        const self = this;\n        mapObj = new AMap.Map('iCenter');\n        mapObj.plugin('AMap.Geolocation', function () {\n            const geolocation = new AMap.Geolocation({\n                enableHighAccuracy: true,//是否使用高精度定位，默认:true\n                timeout: 10000,          //超过10秒后停止定位，默认：无穷大\n                maximumAge: 0,           //定位结果缓存0毫秒，默认：0\n                convert: true,           //自动偏移坐标，偏移后的坐标为高德坐标，默认：true\n                showButton: true,        //显示定位按钮，默认：true\n                buttonPosition: 'LB',    //定位按钮停靠位置，默认：'LB'，左下角\n                buttonOffset: new AMap.Pixel(10, 20),//定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)\n                showMarker: true,        //定位成功后在定位到的位置显示点标记，默认：true\n                showCircle: true,        //定位成功后用圆圈表示定位精度范围，默认：true\n                panToLocation: true,     //定位成功后将定位到的位置作为地图中心点，默认：true\n                zoomToAccuracy: true      //定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false\n            });\n            mapObj.addControl(geolocation);\n            geolocation.getCurrentPosition(function (status, result) {\n                if (status === 'complete') {\n                    self.setState({\n                        city: result.addressComponent.province\n                    });\n                    self.getWeather(result.addressComponent.province);\n                }\n            });\n        })\n    };\n\n    // 获取天气信息\n    getWeather = (city) => {\n        //加载天气查询插件\n        const self = this;\n        AMap.plugin('AMap.Weather', function () {\n            //创建天气查询实例\n            var weather = new AMap.Weather();\n            //执行实时天气信息查询\n            weather.getLive(city, function (err, data) {\n                self.setState({\n                    weather: data.weather\n                });\n            });\n        });\n    };\n    render() {\n        const userId = +window.localStorage.getItem('userId');\n        return (\n            <div className=\"header\">\n                <div className=\"headerBox\">\n                    <Row style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n                        <Col span={2} className=\"col\">\n                            <div className=\"logo\">\n                                <span><AntDesignOutlined style={{ color: '#1890ff', fontSize: '20px' }} /></span>\n                                <span className=\"logoName\">趣聊</span>\n                            </div>\n                        </Col>\n                        <Col span={7} className=\"info\" style={{ display: 'flex', alignItems: 'center' }}>\n                            <div className=\"divs\">\n                                <EnvironmentTwoTone style={{ fontSize: '18px' }} twoToneColor=\"#7BB066\" />\n                                <span>{this.state.city}</span>\n                            </div>\n                            <div className=\"divs\">\n                                <CloudTwoTone style={{ fontSize: '18px' }} twoToneColor=\"#67BDE9\" />\n                                <span>{this.state.weather}</span>\n                            </div>\n                            <div className=\"divs\">\n                                <SkinTwoTone style={{ fontSize: '18px' }} twoToneColor=\"#eb2f96\" />\n                                <Dropdown overlay={\n                                    <Menu onClick={(item, key) => { this.changeSkin(item, key) }}\n                                    >\n                                        <Menu.Item key={'blint'}>蓝色流星</Menu.Item>\n                                        <Menu.Item key={'black'}>暗黑星空</Menu.Item>\n                                        <Menu.Item key={'girl'}>雨后天空</Menu.Item>\n                                        <Menu.Item key={'flower'}>一束碎花</Menu.Item>\n                                        <Menu.Item key={'spring'}>粉色桃花</Menu.Item>\n                                        <Menu.Item key={'katong'}>可爱卡通</Menu.Item>\n                                    </Menu>\n                                } placement=\"bottomCenter\">\n                                    <span>换肤</span>\n                                </Dropdown>\n                            </div>\n                            {\n                                (userId === 1 || userId === 5) &&\n                                <div className=\"divs\">\n                                    <AreaChartOutlined style={{ fontSize: '18px', color: '#365D89' }} />\n                                    <span onClick={() => { window.location.href = window.origin + RouteConfig.dataAnalysize }}>数据中心</span>\n                                </div>\n                            }\n                        </Col>\n                        <Col span={8} className=\"search_col\">\n                            <div className=\"search_box\">\n                                <Input placeholder={'请输入用户名 / 昵称'}\n                                    style={{ width: '400px', height: '36px', borderRadius: '4px' }}\n                                    suffix={<SearchOutlined style={{ color: '#898a8c' }} />}\n                                    onPressEnter={this.searchUsers}\n                                    onChange={this.handleChange} />\n                                {this.state.showBox && <div className=\"searchResult\" onMouseLeave={this.hideBox}>\n                                    {this.state.userList.length > 0 ?\n                                        <List itemLayout=\"horizontal\"\n                                            dataSource={this.state.userList}\n                                            renderItem={item => (\n                                                <List.Item\n                                                    actions={[<Button icon={<UserAddOutlined style={{ color: '#1890ff' }} />}\n                                                        className=\"addUser\" onClick={e => { this.adduser(e, item.userId) }} />]}\n                                                >\n                                                    <List.Item.Meta\n                                                        avatar={\n                                                            <Avatar src={item.photo} />\n                                                        }\n                                                        title={<span>{item.name}</span>}\n                                                        description={<span className=\"user_note\">{item.signature}</span>}\n                                                    />\n                                                </List.Item>\n                                            )}>\n                                        </List>\n                                        : <div style={{ paddingBottom: '20px' }}>\n                                            <Empty\n                                                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                                                description={\n                                                    <span style={{ fontSize: '12px' }}>\n                                                        暂无搜索结果\n                                                </span>\n                                                }\n                                            >\n                                            </Empty>\n                                        </div>\n\n                                    }\n                                </div>\n                                }\n                            </div>\n                        </Col>\n                        <Col span={3} offset={4}>\n                            <Avatar src={this.state.userInfo.photo} />\n                            <span style={{ marginLeft: '5px' }}>{this.state.userInfo.name}</span>\n                            <Button\n                                onClick={this.loginOut}\n                                style={{ marginLeft: '5px', color: '#252626' }}\n                                type={'link'}>\n                                退出</Button>\n                        </Col>\n                    </Row>\n                </div>\n                <AddUserModal ref={'addUserModal'} />\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Header);\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/right/Right.js",["270"],"import React, { Component } from 'react'\nimport HotCommentPost from './HotCommentPost';\nimport HotPost from './HotPost';\nimport People from './People';\nimport Notice from './Notice';\nimport './Right.css';\nexport default class RightView extends Component {\n    render() {\n        return (\n            <div>\n                <People/>\n                <HotPost/>\n                <HotCommentPost/>\n                {/*<Notice/>*/}\n            </div>\n        )\n    }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/left/Left.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/left/UserInfo.js",["271","272","273","274","275","276","277"],"import React, { Component } from 'react'\nimport './Left.css';\nimport { Col, Row, Input, Avatar, Popover, Menu, Tag } from 'antd';\nimport { UserOutlined, WomanOutlined, ManOutlined } from '@ant-design/icons/lib/icons';\nimport { getUserInfo } from '@/remote';\nimport { getTagColors } from '@/utils/TagColor';\n\nconst url = 'https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=3155998395,3600507640&fm=26&gp=0.jpg';\nexport default class UserInfo extends Component {\n    state = {\n        userInfo: {\n            // name: '我是一个小辣椒',\n            // age: 18,\n            // sex: 0,\n            // avatarUrl: '',\n            // tag: [{ name: '互联网民工', color: 'magenta' }, { name: '小清新', color: 'green' }, { name: '技术宅', color: 'blue' }, { name: '二次元', color: 'purple' }],\n            // note: '我是一条不想翻身的咸鱼。'\n        },\n        loading: false,\n    };\n    componentDidMount = () => {\n        this.getUserInfos();\n\n    };\n    getUserInfos = async () => {\n        const userId = window.localStorage.getItem('userId');\n        try {\n            const resp = await getUserInfo({ userId: +userId });\n            if (resp.status === 200) {\n                this.setState({\n                    userInfo: Object.assign({}, resp.data)\n                });\n            }\n\n        } catch (e) {\n\n        } finally {\n            this.setState({\n                loading: true\n            });\n            // console.log(this.state.userInfo);\n        }\n    };\n    render() {\n        const { userInfo } = this.state;\n        return (\n            <>{\n                this.state.loading &&\n                <div className=\"userInfo\">\n                    <div className=\"basicInfo\">\n                        <Avatar size={64} src={userInfo.photo} />\n                        <div>\n                            <div className=\"username\">{userInfo.name}</div>\n                            <div className=\"userage\">\n                                <span>{userInfo.age}岁</span>\n                                {userInfo.sex === 1 ? <WomanOutlined className=\"woman\" /> : <ManOutlined className=\"man\" />}\n                                {/*// <span className=\"woman\">♀</span> : <span className=\"man\">♂</span>}*/}\n                                <span>{userInfo.city.split(' ')[1]}</span>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"note\">{`「${userInfo.signature}」`}</div>\n                    <div className=\"tag\">\n                        {\n                            userInfo.tagList.slice(0, 4).map((item, index) => {\n                                return <Tag style={{ borderRadius: '4px' }} className=\"tagSpan\" color={getTagColors()} key={item.tagName}>{item.tagName}</Tag>\n                            })\n                        }\n                    </div>\n                </div>\n            } </>\n        )\n    }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/left/ToolBar.js",["278","279","280","281"],"import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { Menu } from 'antd';\nimport RouteConfig from '@/routeConfig.js';\nimport { AreaChartOutlined, PieChartOutlined, CommentOutlined, TeamOutlined, SolutionOutlined } from '@ant-design/icons';\n\nconst { SubMenu } = Menu;\n\n\nclass ToolBar extends Component {\n    state = {\n        selectedKeys: [],\n    }\n    clickSelect = (item, key) => {\n        this.setState({\n            selectedKeys: [item.key]\n        })\n        console.log(this.state.selectedKeys);\n    }\n    render() {\n        return (\n            <div className=\"toolBar\">\n                <Menu mode=\"inline\" openKeys={'1'} style={{ width: '100%' }}\n                    defaultSelectedKeys={['1']}\n                    onClick={(item, key) => { this.clickSelect(item, key) }}\n                    selectedKeys={this.state.selectedKeys}>\n                    <Menu.Item key=\"1\" icon={<PieChartOutlined style={{ fontSize: '20px', marginRight: '20px' }} />}>\n                        <Link to={RouteConfig.active}>全部动态</Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" icon={<CommentOutlined style={{ fontSize: '20px', marginRight: '20px' }} />}>\n                        <Link to={RouteConfig.chat}>我的聊天</Link>\n                    </Menu.Item>\n                    {/* <Menu.Item key=\"3\" icon={<TeamOutlined style={{ fontSize: '20px', marginRight: '20px' }} />}>好友列表</Menu.Item> */}\n                    <Menu.Item key=\"4\" icon={<SolutionOutlined style={{ fontSize: '20px', marginRight: '20px' }} />}>\n                        <Link to={RouteConfig.personalInfo}>个人中心</Link></Menu.Item>\n                    {/* <Menu.Item key=\"5\" icon={<AreaChartOutlined style={{ fontSize: '20px', marginRight: '20px' }} />}>数据管理</Menu.Item> */}\n                </Menu>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ToolBar);\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/left/Activation.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/right/People.js",["282","283"],"import React, { Component } from 'react'\nimport { List, Avatar, Button, Skeleton, Space, Empty } from 'antd';\nimport { SmileTwoTone, UserAddOutlined } from '@ant-design/icons';\nimport { getRecommendList } from '@/remote';\nimport AddUserModal from '@/component/addUserModal/AddUserModal';\nexport default class People extends Component {\n    state = {\n        userList: [],\n        loaded: false,\n    }\n    componentDidMount() {\n        this.getData();\n    }\n    getData = async () => {\n        try {\n            const resp = await getRecommendList({ userId: +window.localStorage.getItem('userId') });\n            if (resp.status === 200) {\n                this.setState({\n                    userList: resp.data.list.slice(0,5) || []\n                })\n            }\n        } catch (e) {\n\n        } finally {\n            this.setState({\n                loaded: true,\n            })\n        }\n    }\n    adduser = (e, userId) => {\n        this.refs.addUserModal.showModal(true, userId);\n    }\n    render() {\n        return (\n            <div className=\"people\">\n                <div className=\"user-recom\"><SmileTwoTone style={{ marginRight: '5px' }} />好友推荐</div>\n                {\n                    this.state.userList.length > 0 ?\n                        <List itemLayout=\"horizontal\"\n                            dataSource={this.state.userList}\n                            renderItem={item => (\n                                <List.Item\n                                    actions={[<Button icon={<UserAddOutlined style={{ color: '#1890ff' }} />}\n                                        className=\"addUser\" onClick={e => { this.adduser(e, item.userId) }} />]}\n                                >\n                                    <List.Item.Meta\n                                        avatar={\n                                            <Avatar src={item.photo} />\n                                        }\n                                        title={<span>{item.name}</span>}\n                                        description={<span className=\"user_note\">{item.signature}</span>}\n                                    />\n                                </List.Item>\n                            )}>\n                        </List>\n                        :\n                        <div style={{ paddingBottom: '20px' }}>\n                            <Empty\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                                description={\n                                    <span style={{ fontSize: '12px' }}>\n                                        暂无与自己相匹配的用户\n                                    </span>\n                                }\n                            >\n                            </Empty>\n                        </div>\n\n                }\n                <AddUserModal ref={'addUserModal'} />\n            </div>\n        )\n    }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/right/HotPost.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/right/HotCommentPost.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/component/content/right/Notice.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/index.js",["284"],"import React, { Component } from 'react'\nimport { BrowserRouter as Router , Switch} from 'react-router-dom';\nimport { Route } from 'react-router';\nimport LoginPage from './login/Login';\nimport HomePage from './homePage/HomePage';\nimport RouteConfig from '../routeConfig';\nimport { DataAnalysize } from '@/importComponent';\nexport default class MyRoute extends Component {\n    render() {\n        return (\n            <Router>\n                <Route path={RouteConfig.login} exact component={LoginPage} />\n                <Route path={RouteConfig.dataAnalysize} exact component={DataAnalysize}/>\n                <Route path={RouteConfig.homePage}  component={HomePage} />\n            </Router>\n        )\n    }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/homePage/HomePage.js",["285","286"],"import React, { Component } from 'react'\nimport './HomePage.css';\nimport { Route } from 'react-router';\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport RouteConfig from '@/routeConfig.js';\nimport Header from '@/component/header/Header';\nimport Layout from '@/component/layout/Layout';\nimport { Active, ChatRoom, SendActive, ActiveDetail, PersonalInfo, DataAnalysize } from '@/importComponent';\n\n\nclass HomePage extends Component {\n    state = {\n        skin: 'flower',\n    }\n    selectSkin = (target) => {\n        switch (target) {\n            case 'blint': return 'blint';\n            case 'black': return 'black';\n            case 'girl': return 'girl';\n            case 'flower': return 'flower';\n            case 'spring': return 'spring';\n            case 'katong': return 'katong';\n            default: return null;\n        }\n    }\n    changeSkin = (target) => {\n        const div = document.getElementById('index');\n        this.setState({\n            skin: target\n        })\n\n    }\n    render() {\n        return (\n            <div className={`index ${this.selectSkin(this.state.skin)}`} key={this.props.location.key} id={'index'}>\n                <Header changeSkin={this.changeSkin} />\n                <Layout>\n                    <Router>\n                        <Route path={RouteConfig.active} component={Active} exact />\n                        <Route path={RouteConfig.chat} component={ChatRoom} exact />\n                        <Route path={RouteConfig.sendActive} component={SendActive} exact />\n                        <Route path={RouteConfig.activeDeatil} component={ActiveDetail} />\n                        <Route path={RouteConfig.personalInfo} component={PersonalInfo} />\n                    </Router>\n                </Layout>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(HomePage);\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/login/Login.js",["287","288","289","290","291","292","293","294"],"import React, { Component } from 'react'\nimport { observer } from 'mobx-react';\nimport './Login.css'\nimport { Button, Input, Tabs, Radio, Upload, Select, message } from 'antd';\nimport { UserOutlined, UnlockOutlined } from '@ant-design/icons';\nimport RouteConfig from '@/routeConfig.js';\nimport { observe } from 'web-vitals/dist/lib/observe';\nimport { action, observable, runInAction } from 'mobx';\n// import ImgCrop from 'antd-img-crop';\nimport { register, login } from '@/remote';\nimport Register from './Register';\n\nconst { TabPane } = Tabs;\n\n@observer\nclass Login extends Component {\n    state = {\n        type: 'login',\n        username: '',\n        password: '',\n    };\n\n    handleModeChange = (e) => {\n        this.setState({\n            type: e.target.value\n        });\n    };\n    handleUsernameChange = (e) => {\n        const reg = /^[^\\u4E00-\\u9FFF]+$/;\n        if (!reg.test(e.target.value)) {\n            message.error('用户名不能含有中文');\n        }\n        this.setState({\n            username: e.target.value\n        })\n    };\n    handlePasswordChagne = (e) => {\n        this.setState({\n            password: e.target.value\n        })\n    };\n    hanldeLogin = async () => {\n        if (!this.state.username || !this.state.password) {\n            message.error('用户名或密码不能为空');\n            return;\n        }\n        const params = {\n            username: this.state.username,\n            password: this.state.password,\n        };\n        const resp = await login(params);\n        if (resp.status === 200) {\n            if (resp.data.loginStatus === 0) {\n                window.localStorage.setItem('authentication', resp.data.authentication);\n                window.localStorage.setItem(\"userId\", resp.data.userId);\n                this.setState({\n                    username: resp.data.username,\n                    password: resp.data.password,\n                });\n                message.success('登陆成功');\n                this.props.history.push(RouteConfig.active);\n            } else {\n                message.error('用户名或密码不正确')\n            }\n        } else if (resp.status === 400) {\n            message.error(resp.message);\n        }\n    };\n    render() {\n        return (\n            <div className=\"login\">\n                <div className=\"loginWrap\">\n                    <div className=\"tab\">\n                        <Radio.Group onChange={this.handleModeChange} style={{ marginBottom: 8 }} value={this.state.type}>\n                            <Radio.Button value=\"login\" style={{ width: '120px' }}>登录</Radio.Button>\n                            <Radio.Button value=\"register\" style={{ width: '120px' }}>注册</Radio.Button>\n                        </Radio.Group>\n                    </div>\n                    <div className=\"loginBox\">\n                        {\n                            this.state.type === 'login' ?\n                                <div className='loginForm'>\n                                    {/*<div>登陆</div>*/}\n                                    <div className=\"item\">\n                                        <span className=\"label\">用户名：</span>\n                                        <Input\n                                            placeholder=\"请输入用户名\"\n                                            prefix={<UserOutlined />}\n                                            size={'large'}\n                                            value={this.state.username}\n                                            onChange={this.handleUsernameChange}\n                                            style={{ borderRadius: '4px' }}\n                                        />\n                                    </div>\n                                    <div className=\"item\">\n                                        <span className=\"label\">密码：</span>\n                                        <Input.Password\n                                            placeholder=\"请输入密码\"\n                                            prefix={<UnlockOutlined />}\n                                            size={'large'}\n                                            value={this.state.password}\n                                            onChange={this.handlePasswordChagne}\n                                            style={{ borderRadius: '4px' }}\n                                        />\n                                    </div>\n                                    <Button onClick={this.hanldeLogin}\n                                        type={'primary'}\n                                        style={{ width: '250px', marginTop: '50px' }}>\n                                        登陆\n                                    </Button>\n                                </div>\n                                :\n                                <div className=\"registerForm\">\n                                    <Register />\n                                </div>\n                        }\n                    </div>\n\n\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Login;\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/layout/Layout.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/routeConfig.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/allActive/Post.js",["295","296","297","298","299","300","301"],"import React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport { List, Avatar, Button, Modal, Space, Input, message, Popconfirm } from 'antd';\nimport { DeleteOutlined, MessageOutlined, LikeOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport css from './Post.less';\nimport { getInvitationList, releasePost, deleteInvitation } from '@/remote';\nimport { observer } from 'mobx-react';\nimport RouteConfig from '@/routeConfig';\nconst { TextArea } = Input;\nconst { confirm } = Modal;\nclass Post extends Component {\n    state = {\n        dataList: [],\n        loading: false,\n        initLoading: true,\n        pageNo: 1,\n        pageSize: 100,\n        total: 0,\n        contentValue: '',\n    };\n    componentDidMount() {\n        this.getDataList();\n    }\n    getDataList = async () => {\n        this.setState({\n            loading: true,\n        });\n        try {\n            const params = {\n                pageNo: this.state.pageNo,\n                pageSize: this.state.pageSize,\n            };\n            const resp = await getInvitationList(params);\n            if (resp.status === 200) {\n                this.setState({\n                    dataList: resp.data.list,\n                    total: resp.data.total,\n                })\n            }\n        } catch (e) {\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    };\n    onLoadMore = async () => {\n        this.setState({\n            loading: true,\n            dataList: this.state.dataList.concat([].map(() => ({ loading: true, name: {} }))),\n            pageNo: this.state.pageNo++\n        });\n        try {\n            const params = {\n                pageNo: this.state.pageNo,\n                pageSize: this.state.pageSize,\n            };\n            const resp = await getInvitationList(params);\n            if (resp.status === 200) {\n                this.setState({\n                    dataList: this.state.dataList.concat(resp.data.list),\n                    total: resp.data.total,\n                })\n            }\n        } catch (e) {\n        } finally {\n            this.setState({\n                loading: false\n            })\n        }\n    };\n    contentValueChange = (e) => {\n        this.setState({\n            contentValue: e.target.value\n        })\n\n    };\n    clearAll = () => {\n        this.setState({\n            contentValueChange: ''\n        })\n    };\n    releaseContent = async () => {\n        const params = {\n            userId: window.localStorage.getItem('userId'),\n            content: this.state.contentValue\n        };\n        const resp = await releasePost(params);\n        if (resp.status === 200) {\n            message.success('发布成功');\n            this.setState({\n                contentValue: ''\n            });\n            this.getDataList();\n        }\n    };\n    goToDetail = (item) => {\n        this.props.history.push(RouteConfig.activeDeatil + `?id=${item.id}`)\n    }\n    delete = async (e, id) => {\n        const resp = await deleteInvitation({ invitationId: id, userId: +window.localStorage.getItem('userId') });\n        if (resp.status === 200) {\n            message.success('删除成功');\n            this.getDataList();\n        }\n    }\n    cancel = () => {\n        return;\n    }\n    renderList() {\n        const userId = +window.localStorage.getItem('userId');\n        const IconText = ({ icon, text }) => (\n            <Space>\n                {React.createElement(icon)}\n                {text}\n            </Space>\n        );\n        const loadMore =\n            !this.state.initLoading && !this.state.loading ? (\n                <div\n                    style={{\n                        textAlign: 'center',\n                        marginTop: 12,\n                        height: 32,\n                        lineHeight: '32px',\n                    }}\n                >\n                    <Button onClick={this.onLoadMore}>点击加载更多</Button>\n                </div>\n            ) : null;\n        return <List itemLayout=\"horizontal\"\n            dataSource={this.state.dataList}\n            loading={this.state.loading}\n            // loadMore={loadMore}\n            renderItem={item => (\n                <List.Item actions={[\n                    <IconText icon={LikeOutlined} text={item.likeNum} key=\"list-vertical-like-o\" />,\n                    <IconText icon={MessageOutlined} text={item.commentNum} key=\"list-vertical-message\" />,\n                ]} onClick={() => this.goToDetail(item)}\n                // style={{ backgroundImage: 'url(../../../../static/assets/img/flower.png)' }}\n                >\n                    <div className={css.item} key={item.id}>\n                        <div className={css.top}>\n                            <div className={css.userInfo}>\n                                <Avatar size={50} src={item.photo} />\n                                <div>\n                                    <div className={css.name}>{item.name}</div>\n                                    <div className={css.time}>{moment(item.time).format('YYYY-MM-DD HH:mm:ss')}</div>\n                                </div>\n                            </div>\n                            {/*{*/}\n                            {/*    (item.userId === userId || userId === 1 || userId === 5) &&*/}\n                            {/*    <div>*/}\n                            {/*        <div>*/}\n                            {/*            <Popconfirm*/}\n                            {/*                title=\"确定要删除这条动态吗？\"*/}\n                            {/*                onConfirm={(e) => { this.delete(e, item.id) }}*/}\n                            {/*                onCancel={this.cancel}*/}\n                            {/*                okText=\"删除\"*/}\n                            {/*                cancelText=\"取消\"*/}\n                            {/*            >*/}\n                            {/*                <Button icon={<DeleteOutlined />}*/}\n                            {/*                    type={'link'}*/}\n                            {/*                    onClick={(e) => { e.stopPropagation() }}*/}\n                            {/*                    style={{ marginTop: '10px' }}*/}\n                            {/*                    danger />*/}\n                            {/*            </Popconfirm>*/}\n                            {/*        </div>*/}\n                            {/*    </div>*/}\n                            {/*}*/}\n                        </div>\n                        <div className={css.comment}>\n                            {item.content}\n                        </div>\n                    </div>\n                    <div className={css.line}></div>\n                </List.Item>\n            )}>\n        </List>\n    }\n\n    renderSendPost() {\n        return <div className={css.sendPost}>\n            <TextArea placeholder=\"说点什么吧...\"\n                onPressEnter={this.releaseContent}\n                onChange={this.contentValueChange}\n                value={this.state.contentValue}\n                style={{ outline: 'none' }} />\n            <div className={css.bottom}>\n                <div className={css.tips}>文明社会，文明发言</div>\n                <div className={css.btn}>\n                    <Button type={'primary'}\n                        style={{ marginRight: '10px' }}\n                        onClick={this.clearAll}\n                    >清空</Button>\n                    <Button type={'primary'}\n                        style={{ marginRight: '10px' }}\n                        onClick={this.releaseContent}\n                    >发表</Button>\n                </div>\n            </div>\n        </div>;\n    }\n\n    render() {\n        return (\n            <div className={css.postPage}>\n                {this.renderSendPost()}\n                <div className={css.list}>\n                    {this.renderList()}\n                </div>\n            </div>\n        )\n    }\n}\n// export default Post;\n// export default (props)=><Post {...props} key={props.location.pathname}/>;\nexport default withRouter(Post);\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/chatRoom/ChatRoom.js",["302","303","304","305","306","307","308","309","310"],"import React, { Component } from 'react'\nimport { withRouter } from \"react-router\";\nimport { Col, Row, Input, Avatar, Divider, Menu, Button, Tooltip, message, Select, List, Empty } from 'antd';\nimport { CaretLeftOutlined, CaretRightOutlined } from '@ant-design/icons/lib/icons';\nimport { getUsersList, getChatRecord, handleApply, getUserInfo } from '@/remote'\nimport css from './ChatRoom.less';\nimport Socket from './Socket';\n\n\nconst { TextArea } = Input;\n\nlet websocket = null;\nclass ChatRoom extends Component {\n    state = {\n        userList: [],\n        targetUserId: 0,\n        targetName: '',\n        targetPhoto: '',\n        chatMsg: '',\n        recordList: [],\n        chatList: [],\n        userInfo: {},\n\n    }\n    componentDidMount() {\n        this.getData();\n        this.setConnect();\n        this.getUserInfos();\n\n    }\n    /**\n     * 获取好友列表\n     */\n    getData = async () => {\n        const resp = await getUsersList({ userId: +window.localStorage.getItem('userId') });\n        if (resp.status === 200) {\n            this.setState({\n                userList: resp.data.list || []\n            })\n        }\n    }\n    getUserInfos = async () => {\n        const userId = window.localStorage.getItem('userId');\n        try {\n            const resp = await getUserInfo({ userId: +userId });\n            if (resp.status === 200) {\n                this.setState({\n                    userInfo: Object.assign({}, resp.data)\n                });\n            }\n\n        } catch (e) {\n\n        } finally {\n\n            // console.log(this.state.userInfo);\n        }\n    };\n    /**\n     * 获取聊天记录\n     */\n    getChatRecords = async () => {\n        const params = {\n            userId: +window.localStorage.getItem('userId'),\n            targetUserId: this.state.targetUserId,\n        }\n        const resp = await getChatRecord(params);\n        if (resp.status === 200) {\n            this.setState({\n                recordList: resp.data.list || []\n            })\n        }\n    }\n    /**\n     * 选择聊天对象\n     * @param {*} e \n     * @param {*} item \n     */\n    selectTarget = (e, item) => {\n        this.setState({\n            targetName: item.name,\n            targetUserId: item.userId,\n            targetPhoto: item.photo\n        }, () => {\n            this.getChatRecords();\n        })\n    }\n    hanldeMsg = (e) => {\n        this.setState({\n            chatMsg: e.target.value\n        })\n    }\n    clear = () => {\n        this.setState({\n            chatMsg: ''\n        })\n    }\n    /**\n     * \n     * 建立websocket链接\n     */\n    setConnect = () => {\n        const userId = window.localStorage.getItem('userId');\n        this.socket = new Socket(\"ws://localhost:8080/api/be/chatting/websocket/\" + userId, '');\n        // this.socket = new Socket(\"ws://121.40.165.18:8800\" + '', '');\n        this.socket.init();\n        this.socket.onmessage(this.resivemessage.bind(this));\n    }\n    /**\n     * 从服务端接受的消息\n     * @param {*} data \n     */\n    resivemessage = (data) => {\n        if (data === '当前用户不在线') {\n            message.warning(data);\n        } else {\n            const datas = JSON.parse(data);\n            this.state.chatList.push(datas);\n            this.setState({\n                chatList: [...this.state.chatList]\n            })\n        }\n    }\n    /**\n     * 发消息给服务端\n     */\n    sendMessage = () => {\n        const div = document.getElementById('chatItems');\n        const params = {\n            userId: +window.localStorage.getItem('userId'),\n            targetUserId: this.state.targetUserId,\n            content: this.state.chatMsg\n        }\n        this.state.chatList.push(params);\n        this.setState({\n            chatList: [...this.state.chatList]\n        })\n        this.socket.send(JSON.stringify(params));\n        this.setState({\n            chatMsg: ''\n        })\n        div.scrollTop = div.scrollHeight;\n    }\n\n    renderChat() {\n        const userId = +window.localStorage.getItem('userId');\n        return <div className={css.chatItems} id={'chatItems'}>\n            {\n                this.state.recordList.concat(this.state.chatList).map(item => {\n                    return <>\n                        {\n                            +item.userId === userId ?\n                                <div className={css.my}>\n                                    <div className={css.myContent}>\n                                        {\n                                            item.content\n                                        }\n                                    </div>\n                                    <CaretRightOutlined className={css.myIcon} />\n                                    <Avatar src={this.state.userInfo.photo} />\n                                </div>\n                                :\n                                <div className={css.target}>\n                                    <Avatar src={this.state.targetPhoto} />\n                                    <CaretLeftOutlined className={css.targetIcon} />\n                                    <div className={css.targetContent}>\n                                        {\n                                            item.content\n                                        }\n                                    </div>\n                                </div>\n\n                        }\n                    </>\n\n                })\n            }\n        </div>\n    }\n    render() {\n        return (\n            <div className={css.chatPage}>\n                <div className={css.userList}>\n                    <List itemLayout=\"horizontal\"\n                        dataSource={this.state.userList}\n                        renderItem={item => (\n                            <List.Item onClick={e => { this.selectTarget(e, item) }}\n                                className={item.userId === this.state.targetUserId ? css.active : ''}>\n                                <div className={css.item}>\n                                    <Avatar src={item.photo} />\n                                    <span>{item.name}</span>\n                                </div>\n                            </List.Item>\n                        )}>\n                    </List>\n                </div>\n                <div className={css.chat_Box}>\n                    {\n                        this.state.targetName === '' ?\n                            <div className={css.noOne}>\n                                <div>\n                                    <div className={css.topText}>主动一点，</div>\n                                    <div>世界会更大！</div>\n                                </div>\n                            </div>\n                            :\n                            <>\n                                <div className={css.chatContent}>\n                                    <div className={css.chat_partner}>\n                                        {this.state.targetName}\n                                    </div>\n                                    <div className={css.chatBox}>\n                                        {this.renderChat()}\n                                    </div>\n                                </div>\n                                <div className={css.inpuBox}>\n                                    <TextArea value={this.state.chatMsg}\n                                        rows={5}\n                                        style={{\n                                            borderRadius: '4px'\n                                        }}\n                                        onPressEnter={this.sendMessage}\n                                        onChange={this.hanldeMsg} />\n                                    <div className={css.btn}>\n                                        <Button type={'primary'} style={{\n                                            marginRight: '15px'\n                                        }} onClick={this.clear}>清空</Button>\n                                        <Button type={'primary'} onClick={this.sendMessage}>发送</Button>\n                                    </div>\n                                </div>\n                            </>\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ChatRoom);\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/importComponent.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/AsyncComponent.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/index.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/common/tag.list.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/fetch/index.js",["311"],"import Async from \"./fetch\";\r\nimport { message } from 'antd';\r\n\r\nexport default async (url = \"\", data = {}, type = \"GET\", notify = false) => {\r\n    const $http = new Async(url, data, type);\r\n    $http.httpProvider = function () {\r\n        return {\r\n            response(response, responseJson) {\r\n                if (response.status === 200) {\r\n                    if (notify && responseJson) {\r\n                        if (responseJson.status === \"success\") {\r\n                            // Message({\r\n                            //     message: responseJson.message || \"操作成功\",\r\n                            //     type: \"success\",\r\n                            //     showClose: true,\r\n                            //     duration: 2000\r\n                            // });\r\n                            message.success(responseJson.message || \"操作成功\");\r\n                        } else {\r\n                            // Message({\r\n                            //     message: responseJson.message || \"操作失败\",\r\n                            //     type: \"error\",\r\n                            //     showClose: true,\r\n                            //     duration: 2000\r\n                            // });\r\n                            // throw new Error();\r\n                            message.error(responseJson.message || \"操作失败\");\r\n                        }\r\n                    }\r\n                    return responseJson;\r\n                }\r\n                if (response.status === 401) {\r\n                    // Message({\r\n                    //     type: 'error',\r\n                    //     message: \"登录超时,3秒后退出登录\"\r\n                    // })\r\n                    message.error(\"登录超时,3秒后退出登录\");\r\n                    setTimeout(() => {\r\n                        window.location.href = \"/\";\r\n                    }, 3000);\r\n                    // throw new Error();\r\n                    return responseJson;\r\n                } else {\r\n                    message.error(`操作失败,请联系管理员,错误代码${response.status}`);\r\n                }\r\n                // Message({\r\n                //     message: `操作失败,请联系管理员,错误代码${response.status}`,\r\n                //     type: \"error\",\r\n                //     showClose: true,\r\n                //     duration: 2000\r\n                // });\r\n\r\n                // throw new Error();\r\n            }\r\n        };\r\n    };\r\n    const res = await $http.send();\r\n    return res;\r\n};\r\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/fetch/fetch.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/common/register.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/login/Register.js",["312","313","314","315","316","317","318"],"import React, { Component, useState } from 'react'\nimport './Login.css';\nimport { Button, Input, Tabs, Radio, Upload, Select, message, Tag, Cascader } from 'antd';\nimport { getTagList, register, login } from '@/remote';\nimport { getColors } from '@/utils/TagColor';\nimport cityList from '@/city.json';\n\nconst Option = Select.Option;\n// eslint-disable-next-line no-undef\nlet FormData = window.FormData;\nlet formdata = new FormData();\n\nexport default class Register extends Component {\n  state = {\n    fileList: [],\n    file: null,\n    username: '',\n    password: '',\n    name: '',\n    sex: 0,\n    age: '',\n    city: '',\n    selectCitys: [],\n    emotion: 1,\n    signature: '',\n    tagList: [],\n    tags: [],\n  }\n  componentDidMount() {\n    this.getTags();\n  }\n  getTags = async () => {\n    const respData = await getTagList({});\n    if (respData.status === 200) {\n      this.setState({\n        tags: respData.data.list.map(item => {\n          return {\n            ...item,\n            tagColor: getColors()\n          }\n        })\n      })\n    }\n  };\n  onPreview = async (file) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n  onChange = (info) => {\n    formdata.append('file', info.file);\n    this.setState({\n      file: formdata.get('file'),// info.file,\n      fileList: info.fileList,\n    });\n  };\n  handleUsernameChange = (e) => {\n    const reg = /^[^\\u4E00-\\u9FFF]+$/;\n    if (!reg.test(e.target.value)) {\n      message.error('用户名不能含有中文');\n    }\n    this.setState({\n      username: e.target.value\n    })\n  };\n  handlePasswordChagne = (e) => {\n    this.setState({\n      password: e.target.value\n    })\n  };\n  hanldeNameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    })\n  };\n  handelSex = (e) => {\n    this.setState({\n      sex: e,\n    })\n  };\n  handleAge = (e) => {\n    this.setState({\n      age: e.target.value\n    })\n  };\n  handleEmotion = (e) => {\n    this.setState({\n      emotion: e,\n    })\n  };\n  handleSignature = (e) => {\n    this.setState({\n      signature: e.target.value\n    })\n  };\n  validata() {\n    if (!this.state.username) {\n      return {\n        code: 0,\n        msg: '请输入用户名'\n      }\n    }\n    const reg = /^[^\\u4E00-\\u9FFF]+$/;\n    if (!reg.test(this.state.username)) {\n      return {\n        code: 0,\n        msg: '用户名不能含有中文'\n      }\n    }\n    if (!this.state.password) {\n      return {\n        code: 0,\n        msg: '请输入密码'\n      }\n    }\n    if (!this.state.name) {\n      return {\n        code: 0,\n        msg: '请输入昵称'\n      }\n    }\n    if (!this.state.age) {\n      return {\n        code: 0,\n        msg: '请输入年龄'\n      }\n    }\n    if (!this.state.city) {\n      return {\n        code: 0,\n        msg: '请输入城市'\n      }\n    }\n    if (!this.state.signature) {\n      return {\n        code: 0,\n        msg: '请输入个人签名'\n      }\n    }\n    if (this.state.tagList.length <= 0) {\n      return {\n        code: 0,\n        msg: '请选择标签'\n      }\n    } if (!this.state.fileList[0]) {\n      return {\n        code: 0,\n        msg: '请上传头像'\n      }\n    } else {\n      return {\n        code: 1,\n        msg: ''\n      }\n    }\n  }\n  hanldeRegister = async () => {\n    const val = this.validata();\n    const { username, file, name, password, fileList, sex, age, city, emotion, signature, tagList } = this.state;\n    if (val.code === 0) {\n      message.error(val.msg);\n      return;\n    }\n    formdata.append('file', fileList[0]);\n    formdata.append('username', username);\n    formdata.append('password', password);\n    formdata.append('name', name);\n    formdata.append('sex', sex);\n    formdata.append('age', age);\n    formdata.append('city', city);\n    formdata.append('emotion', emotion);\n    formdata.append('signature', signature);\n    formdata.append('tagList', tagList.join(','));\n    fetch('/api/be/chatting/common/register', {\n      method: 'post',\n      body: formdata,\n    }).then(resp => {\n      if (resp.status === 200) {\n        message.success('注册成功，请前往登录');\n      }\n    });\n  };\n  selectTag = (item, index) => {\n    const span = document.getElementById(`tag${index}`);\n    const color = span.style.color;\n    const idx = this.state.tagList.findIndex(it => it === item.tagId);\n    if (idx > -1) {\n      span.style.background = '#fff';\n      span.style.color = getColors();\n      this.state.tagList.splice(idx, 1);\n      this.setState({\n        tagList: [...this.state.tagList]\n      })\n    } else {\n      span.style.background = color;\n      this.state.tagList.push(item.tagId);\n      this.setState({\n        tagList: [...this.state.tagList]\n      });\n      span.style.color = 'red';\n    }\n  };\n  onChangeCity = (value, selectedOptions) => {\n    this.setState({\n      selectCitys: value\n    }, () => {\n      this.setState({\n        city: this.state.selectCitys.join(' ')\n      });\n    });\n\n  };\n  beforeUpload = (file) => {\n    this.setState({\n      fileList: [file]\n    });\n    return false;\n  };\n  render() {\n    return <>\n      <div className=\"item\">\n        <span className=\"required\">* </span>\n        <span className=\"label\">用户名：</span>\n        <Input placeholder={'请输入用户名'} value={this.state.username} onChange={this.handleUsernameChange} />\n      </div>\n      <div className=\"item\">\n        <span className=\"required\">* </span>\n        <span className=\"label\">密码：</span>\n        <div style={{ flex: 1 }}>\n          <Input.Password placeholder=\"请输入密码\" value={this.state.password} onChange={this.handlePasswordChagne} style={{ borderRadius: '4px' }} />\n        </div>\n      </div>\n      <div className=\"item\">\n        <span className=\"required\">* </span>\n        <span className=\"label\">昵称：</span>\n        <Input placeholder={'请输入昵称'} value={this.state.name} onChange={this.hanldeNameChange} />\n      </div>\n      <div className=\"item\">\n        <span className=\"required\">* </span>\n        <span className=\"label\">性别：</span>\n        <Select style={{ width: '100%', flex: 1 }} value={this.state.sex} onChange={this.handelSex}>\n          <Option value={0}>男</Option>\n          <Option value={1}>女</Option>\n        </Select>\n      </div>\n      <div className=\"item\">\n        <span className=\"required\">* </span>\n        <span className=\"label\">年龄：</span>\n        <Input placeholder={'请输入年龄'} value={this.state.age} type=\"number\" onChange={this.handleAge} />\n      </div>\n      <div className=\"item\">\n        <span className=\"required\">* </span>\n        <span className=\"label\">城市：</span>\n        <Cascader\n          style={{ width: '100%', flex: 1, textAlign: 'left' }}\n          fieldNames={{ value: 'label', label: 'label', children: 'children' }}\n          options={cityList}\n          expandTrigger={'hover'}\n          changeOnSelect\n          value={this.state.selectCitys}\n          onChange={(value, selectedOptions) => { this.onChangeCity(value, selectedOptions); }}\n          placeholder=\"请选择城市\"\n        />\n      </div>\n      <div className=\"item\">\n        <span className=\"required\">* </span>\n        <span className=\"label\">感情状态：</span>\n        <Select style={{ width: '100%', flex: 1 }} value={this.state.emotion} onChange={this.handleEmotion}>\n          <Option value={1}>单身</Option>\n          <Option value={2}>离婚</Option>\n          <Option value={3}>已婚</Option>\n          <Option value={4}>恋爱</Option>\n        </Select>\n      </div>\n      <div className=\"item\">\n        <span className=\"required\">* </span>\n        <span className=\"label\">个人签名：</span>\n        <Input placeholder={'请输入个人签名'} value={this.state.signature} onChange={this.handleSignature} />\n      </div>\n      <div className=\"item\" style={{ alignItems: 'baseline' }}>\n        <span className=\"required\">* </span>\n        <span className=\"label\">标签选择：</span>\n        <div className=\"tagList\">\n          {\n            this.state.tags.map((item, index) => {\n              return <span key={item.tagId} className=\"tag\"\n                id={`tag${index}`}\n                style={{ color: `${this.state.tagList.includes(item.tagId) ? '#fff' : item.tagColor}` }}\n                onClick={() => { this.selectTag(item, index); }}>{item.tagName}</span>\n            })\n          }\n        </div>\n      </div>\n      <div className=\"item\" style={{ alignItems: 'normal' }}>\n        <span className=\"required\">* </span>\n        <span className=\"label\">头像：</span>\n        {/*<ImgCrop rotate>*/}\n        <Upload\n          // action=\"\"\n          listType=\"picture-card\"\n          fileList={this.state.fileList}\n          // onChange={this.onChange}\n          // onPreview={this.onPreview}\n          beforeUpload={this.beforeUpload}\n        >上传头像</Upload>\n        {/*</ImgCrop>*/}\n        <input id=\"file\" onChange={this.handleFileChange} type=\"file\" name=\"file\" />\n      </div>\n      <div>\n        <Button onClick={this.hanldeRegister}\n          type={'primary'}\n          style={{ width: '250px', marginTop: '50px' }}>\n          注册\n        </Button>\n      </div>\n    </>\n  }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/common/login.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/TagColor.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/service.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/common/loginout.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/sendActive/SendActive.js",["319","320","321","322","323","324","325","326","327"],"import React, { Component } from 'react'\nimport css from './SendActive.less';\nimport { List, Avatar, Button, Skeleton, Space, Input } from 'antd';\nimport { DeleteOutlined, MessageOutlined, LikeOutlined, EditOutlined } from '@ant-design/icons';\n\nexport default class SendActive extends Component {\n    render() {\n        return (\n            <div className={css.SendActive}>\n                <div className={css.top}>\n                    <Button>取消</Button>\n                </div>\n                <div>\n\n                </div>\n            </div>\n        )\n    }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/activeDetail/ActiveDetail.js",["328","329"],"import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport url from 'url'; //引入url解析模块\nimport { Button, Divider, Input, message } from 'antd';\nimport { DeleteOutlined, MessageOutlined, LikeOutlined, EditOutlined, LikeTwoTone } from '@ant-design/icons';\nimport { getInvitationDetail, invitationComment, invitationLike, invitationLikeUserList } from '@/remote'\nimport css from './ActiveDetail.less';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport moment from 'moment';\nimport CommentList from './comment/Comment';\nimport AvatarList from '@/component/avatarList/AvatarList.js';\n\nconst { TextArea } = Input;\n@observer\nclass ActiveDetail extends React.Component {\n    state = {\n        detailInfo: {},\n        liked: false,\n        commented: false,\n        loaded: false,\n        commentValue: '',\n        likeuserlist: [],\n        likeuserTotal: 0,\n    }\n    componentDidMount() {\n        this.getDetail();\n    }\n    getDetail = async () => {\n        try {\n            const query = url.parse(this.props.location.search, true).query;\n            const id = +query.id;\n            if (!id) { return; }\n            const resp = await getInvitationDetail({ invitationId: id });\n            if (resp.status === 200) {\n                this.setState({\n                    detailInfo: resp.data || [],\n                })\n                this.getLikeUserList();\n            }\n        } catch (e) {\n\n        } finally {\n            this.setState({\n                loaded: true\n            })\n        }\n\n    }\n    /**\n    * 帖子点赞用户列表\n    */\n    getLikeUserList = async () => {\n        const resp = await invitationLikeUserList({ invitationId: this.state.detailInfo.id });\n        if (resp.status === 200) {\n            this.setState({\n                likeuserlist: resp.data.list || [],\n                likeuserTotal: resp.data.total\n            })\n        }\n    }\n    /**\n     * 帖子点赞\n     */\n    handleLiked = () => {\n        this.setState({\n            liked: !this.state.liked\n        }, () => {\n            if (this.state.liked) {\n                this.commentLike();\n            }\n        })\n    }/**\n     * 帖子评论\n     */\n    hanldeCommented = () => {\n        this.setState({\n            commented: !this.state.commented\n        })\n    }\n    hanldeCommentValueChange = (e) => {\n        this.setState({\n            commentValue: e.target.value\n        })\n    }\n    sendComment = async () => {\n        const params = {\n            invitationId: this.state.detailInfo.id,\n            userId: window.localStorage.getItem('userId'),\n            content: this.state.commentValue\n        }\n        const resp = await invitationComment(params);\n        if (resp.status === 200) {\n            message.success('评论成功');\n            this.setState({\n                commentValue: ''\n            })\n            this.refs.comment.getCommentList();\n            this.getDetail();\n        }\n    }\n    cancelComment = () => {\n        this.setState({\n            commented: !this.state.commented\n        })\n    }\n    clearComment = () => {\n        this.setState({\n            commentValue: ''\n        })\n    }\n    /**\n     * 帖子点赞\n     */\n    commentLike = async () => {\n        const params = {\n            invitationId: this.state.detailInfo.id,\n            userId: window.localStorage.getItem('userId'),\n        }\n        const resp = await invitationLike(params);\n        if (resp.status === 200) {\n            this.getDetail();\n            this.getLikeUserList();\n        }\n    }\n    renderDetail() {\n        const { detailInfo } = this.state;\n        const userId = window.localStorage.getItem('userId');\n        return <div className={css.detailBox}>\n            <div className={css.infoTop}>\n                <div className={css.avatar}>\n                    <Avatar size={45} src={detailInfo.photo} />\n                </div>\n                {detailInfo.canDelete && <div>\n                    <Button icon={<DeleteOutlined />}\n                        type={'link'}\n                        style={{ marginTop: '10px' }}\n                        danger />\n                </div>}\n                <div className={css.userInfo}>\n                    <span className={css.name}>{detailInfo.name}</span>\n                    <span className={css.time}>{moment(detailInfo.time).startOf('hour').fromNow()}</span>\n                </div>\n            </div>\n            <div className={css.infoContent}>\n                {detailInfo.content}\n            </div>\n            <div className={css.infoBottom}>\n                <div className={css.like}>\n                    <span onClick={this.handleLiked}>\n                        {\n                            (this.state.liked || this.state.likeuserlist.findIndex(item => item.userId === +userId) > -1) ?\n                                <LikeTwoTone className={css.icon} />\n                                : <LikeOutlined className={css.icon} />\n                        }\n\n                    </span>\n                    <span>{detailInfo.likeNum}</span>\n                </div>\n                <div className={css.comment}>\n                    <span onClick={this.hanldeCommented}><MessageOutlined className={css.icon} /></span>\n                    <span>{detailInfo.commentNum}</span>\n                </div>\n            </div>\n        </div>;\n    }\n    renderCommentArea() {\n        return <div className={css.commentBox}>\n            <TextArea placeholder={'良言一句三冬暖～'}\n                value={this.state.commentValue}\n                onChange={this.hanldeCommentValueChange} />\n            <div className={css.footer}>\n                <Button type={'primary'} onClick={this.cancelComment}>取消</Button>\n                <Button type={'primary'} onClick={this.clearComment} style={{ margin: '0px 14px' }}>清空</Button>\n                <Button type={'primary'} onClick={this.sendComment}>发表</Button>\n            </div>\n        </div>\n    }\n    render() {\n        return <div className={css.detailPage}>\n            {this.renderDetail()}\n            <Divider />\n            <div className={css.avatarList}>\n                <AvatarList avatarList={this.state.likeuserlist} />\n                <span style={{ marginLeft: '5px' }}>{this.state.likeuserlist.length}个趣友觉得很赞</span>\n            </div>\n            {this.state.loaded && <CommentList invitationId={this.state.detailInfo.id} ref={'comment'} />}\n            {this.state.commented && this.renderCommentArea()}\n        </div>\n    }\n}\n\nexport default ActiveDetail\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/activeDetail/comment/Comment.js",["330","331","332","333"],"import React, { Component } from 'react'\nimport { getInvitationCommentList } from '@/remote';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { List, Skeleton, Avatar } from 'antd';\nimport moment from 'moment';\nimport css from './Comment.less';\n\nexport default class CommentList extends Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    pageNo: 1,\n    pageSize: 10,\n    commentTotal: 0,\n    commentList: [],\n  }\n  componentDidMount() {\n    this.getCommentList();\n  }\n  getCommentList = async () => {\n    const params = {\n      pageNo: this.state.pageNo,\n      pageSize: this.state.pageSize,\n      invitationId: this.props.invitationId\n    }\n    const resp = await getInvitationCommentList(params);\n    if (resp.status === 200) {\n      this.setState({\n        commentTotal: resp.data.total,\n        commentList: resp.data.list\n      })\n    }\n  }\n  render() {\n    const userId = window.localStorage.getItem('userId');\n    return <div className={css.commentBox}>\n      <List\n        className=\"demo-loadmore-list\"\n        itemLayout=\"horizontal\"\n        dataSource={this.state.commentList}\n        renderItem={item => (\n          <List.Item\n          // actions={[+userId === item.userId ? <span><DeleteOutlined style={{ color: 'red' }} /></span> : null]}\n          >\n            <List.Item.Meta\n              avatar={\n                <Avatar src={item.photo} />\n              }\n              title={<span>{item.name}</span>}\n              description={<div>{item.content}</div>}\n            />\n            <div className={css.time}>{moment(item.time).format('YYYY-MM-DD HH:mm:ss')}</div>\n          </List.Item>\n        )}\n      />\n    </div>\n  }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/component/avatarList/AvatarList.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/PersonalInfo.js",["334"],"import React, { Component } from 'react'\nimport { Tabs } from 'antd';\nimport { IdcardOutlined, MessageOutlined, TeamOutlined, HeartOutlined } from '@ant-design/icons';\nimport css from './PersonalInfo.less';\nimport BasicInfo from './basicInfo/BasicInfo';\nimport MyUserList from './myUsers/MyUserList';\nimport LikeList from './likeList/LikeList';\nimport CommentList from './commentList/CommentList';\n\n\nconst { TabPane } = Tabs;\n\nexport default class PersonalInfo extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    console.log(this.child);\n    return (\n      <div className={css.personalInfoPage}>\n        <div className={css.top}>\n        </div>\n        <div className={css.content}>\n          <Tabs defaultActiveKey=\"1\">\n            <TabPane tab={<span><IdcardOutlined />基本信息</span>} key=\"1\">\n              <BasicInfo />\n            </TabPane>\n            <TabPane tab={<span><TeamOutlined />好友列表</span>} key=\"2\">\n              <MyUserList />\n            </TabPane>\n            <TabPane tab={<span><HeartOutlined />我的点赞</span>} key=\"3\">\n              <LikeList />\n            </TabPane>\n            <TabPane tab={<span><MessageOutlined />我的评论</span>} key=\"4\">\n              <CommentList />\n            </TabPane>\n          </Tabs>\n        </div>\n      </div>\n    )\n  }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/basicInfo/BasicInfo.js",["335","336","337","338","339","340","341","342","343","344","345"],"import React, { Component } from 'react'\nimport { Button, Col, Input, Row, Select, Cascader, Tag, Divider, message, Upload } from 'antd';\nimport css from './BasicInfo.less';\nimport { getUserInfo, getTagList, updateUserInfo } from '@/remote';\nimport { UserOutlined, WomanOutlined, ManOutlined } from '@ant-design/icons/lib/icons';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport cityList from '@/city.json';\nimport { getColors, getTagColors } from '@/utils/TagColor';\nimport TagList from './TagEdit';\n\nconst { Option } = Select;\nlet FormData = window.FormData;\nlet formdata = new FormData();\n\nexport default class BasicInfo extends Component {\n  state = {\n    isEdit: false,\n    userInfo: {},\n    loaded: false,\n    tagList: [],\n    username: '',\n    name: '',\n    sex: 1,\n    age: 0,\n    city: '',\n    signature: '',\n    photo: '',\n    emotion: 1,\n    password: '',\n    selectCitys: [],\n    fileList: [],\n    file: null,\n  }\n  componentDidMount = () => {\n    this.getUserInfos();\n    this.getTags();\n\n  };\n  getUserInfos = async () => {\n    const userId = window.localStorage.getItem('userId');\n    try {\n      const resp = await getUserInfo({ userId: +userId });\n      if (resp.status === 200) {\n        this.setState({\n          username: resp.data.username,\n          name: resp.data.name,\n          password: resp.data.password,\n          age: resp.data.age,\n          sex: resp.data.sex,\n          city: resp.data.city,\n          emotion: resp.data.emotion,\n          photo: resp.data.photo,\n          signature: resp.data.signature,\n          selectCitys: [\"北京市\", \"北京\"],\n          tagList: resp.data.tagList.map(item => {\n            return {\n              ...item,\n              bgColor: getColors()\n            }\n          })\n        });\n      }\n\n    } catch (e) {\n\n    } finally {\n      this.setState({\n        loaded: true\n      });\n      // console.log(this.state.userInfo);\n    }\n  };\n  updateUserInfos = async () => {\n    const { username, name, age, sex, signature, emotion, city, password, fileList } = this.state;\n    formdata.append('userId', +window.localStorage.getItem('userId'));\n    formdata.append('username', username);\n    formdata.append('password', password);\n    formdata.append('name', name);\n    formdata.append('sex', sex);\n    formdata.append('age', age);\n    formdata.append('city', city);\n    formdata.append('emotion', emotion);\n    formdata.append('signature', signature);\n    formdata.append('tagList', this.state.tagList.map(item => item.tagId).join(','));\n    fetch('/api/be/chatting/update/user/info', {\n      method: 'post',\n      headers: {\n        'authentication': window.localStorage.getItem('authentication')\n      },\n      body: formdata,\n    }).then(resp => {\n      if (resp.status === 200) {\n        message.success('修改成功');\n        this.setState({\n          isEdit: false\n        });\n        this.getUserInfos();\n      }\n    });\n  }\n  editInfo = () => {\n    this.setState({\n      isEdit: true\n    })\n  }\n  saveInfo = () => {\n    this.updateUserInfos();\n  }\n  handelSex = (e) => {\n    this.setState({\n      sex: e,\n    })\n  };\n  hanldeNameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    })\n  };\n  handleAge = (e) => {\n    this.setState({\n      age: e.target.value\n    })\n  };\n  handleEmotion = (e) => {\n    this.setState({\n      emotion: e,\n    })\n  };\n  handleSignature = (e) => {\n    this.setState({\n      signature: e.target.value\n    })\n  };\n  onChangeCity = (value, selectedOptions) => {\n    this.setState({\n      selectCitys: value\n    }, () => {\n      this.setState({\n        city: this.state.selectCitys.join(' ')\n      });\n    });\n\n  };\n  onChangeFile = (fileList) => {\n    console.log(fileList);\n  }\n  closeTag = (e, tagId) => {\n    const idx = this.state.tagList.findIndex(it => it.tagId === tagId);\n    console.log(idx);\n    if (idx > -1) {\n      this.state.tagList.splice(idx, 1);\n    }\n    console.log(this.state.tagList);\n    this.setState({\n      tagList: [...this.state.tagList]\n    })\n  }\n  getEmotionType = (emotion) => {\n    switch (emotion) {\n      case 1: return '单身';\n        break;\n      case 2: return '离婚';\n        break;\n      case 3: return '已婚';\n        break;\n      case 4: return '恋爱';\n        break;\n    }\n  }\n  getTags = async () => {\n    const respData = await getTagList({});\n    if (respData.status === 200) {\n      this.setState({\n        tags: respData.data.list.map(item => {\n          return {\n            ...item,\n            tagColor: getColors()\n          }\n        })\n      })\n    }\n  };\n  selectTag = (item, index) => {\n    const span = document.getElementById(`tag${index}`);\n    const color = span.style.color;\n    const idx = this.state.tagList.findIndex(it => it.tagId === item.tagId);\n    if (idx > -1) {\n      // span.style.background = '#fff';\n      // span.style.color = getColors();\n      // this.state.tagList.splice(idx, 1);\n      // this.setState({\n      //   tagList: [...this.state.tagList]\n      // })\n      message.error('标签已存在');\n    } else {\n      span.style.background = color;\n      span.style.color = '#fff';\n      this.state.tagList.push({ tagId: item.tagId, tagName: item.tagName });\n      this.setState({\n        tagList: this.state.tagList.map(item => {\n          return {\n            ...item,\n            bgColor: getColors(),\n          }\n        })\n      });\n    }\n  };\n  render() {\n    const { username, name, age, sex, signature, emotion, city, photo, fileList } = this.state;\n    return (\n      <div className={css.basicInfo}>\n        {/* <div>\n          <img src='../../../static/assets/img/card.png' />\n        </div> */}\n        {/* <div className={css.userPhoto}>\n          <div>\n            {\n              this.state.isEdit ? <Button onClick={this.saveInfo}>保存修改</Button>\n                : <Button onClick={this.editInfo}>修改资料</Button>\n            }\n          </div>\n        </div> */}\n        <div className={css.basicInfoContent}>\n          <Row>\n            <Col className={css.label}>头像：</Col>\n            <Col style={{ display: 'flex', justifyContent: 'space-between' }} span={16}>\n              {\n                this.state.isEdit ?\n                  <Upload\n                    action=\"/api/be/chatting/update/user/photo\"\n                    listType=\"picture-card\"\n                    headers={{ authentication: window.localStorage.getItem(\"authentication\") ? window.localStorage.getItem(\"authentication\") : null }}\n                    data={{ userId: +window.localStorage.getItem('userId') }}\n                    fileList={fileList}\n                    onChange={this.onChangeFile(fileList)}\n                  >\n                    点击上传\n                  </Upload>\n                  :\n                  <Avatar src={photo} size={45} />\n              }\n              <div>\n                {\n                  this.state.isEdit ? <span onClick={this.saveInfo} className={css.save} />\n                    :\n                    // <Button onClick={this.editInfo}\n                    //   icon={<span className={css.icon}></span>}>修改资料</Button>\n                    <span className={css.icon} onClick={this.editInfo}></span>\n                }\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col className={css.label}>用户名：</Col>\n            <Col>{this.state.isEdit ? <Input value={username} disabled /> : <div>{username}</div>}</Col>\n          </Row>\n          <Row>\n            <Col className={css.label}>昵称：</Col>\n            <Col>{this.state.isEdit ? <Input value={name} onChange={this.hanldeNameChange} /> : <div>{name}</div>}</Col>\n          </Row>\n          <Row>\n            <Col className={css.label}>性别：</Col>\n            <Col>\n              {\n                this.state.isEdit ?\n                  <Select style={{ width: '100%', flex: 1 }} value={sex} onChange={this.handelSex}>\n                    <Option value={0}>男</Option>\n                    <Option value={1}>女</Option>\n                  </Select>\n                  :\n                  <div> {sex === 1 ? <WomanOutlined className={css.woman} /> : <ManOutlined className={css.man} />}</div>\n              }\n            </Col>\n          </Row>\n          <Row>\n            <Col className={css.label}>年龄：</Col>\n            <Col>{this.state.isEdit ? <Input value={age} type=\"number\" onChange={this.handleAge} /> : <div>{age}</div>}</Col>\n          </Row>\n          <Row>\n            <Col className={css.label}>城市：</Col>\n            <Col>{this.state.isEdit ?\n              <Cascader\n                style={{ width: '100%', flex: 1, textAlign: 'left' }}\n                fieldNames={{ value: 'label', label: 'label', children: 'children' }}\n                options={cityList}\n                expandTrigger={'hover'}\n                changeOnSelect\n                value={this.state.selectCitys}\n                onChange={(value, selectedOptions) => { this.onChangeCity(value, selectedOptions); }}\n                placeholder=\"请选择城市\"\n              /> : <div>{city}</div>}</Col>\n          </Row>\n          <Row>\n            <Col className={css.label}>感情状态：</Col>\n            <Col>\n              {\n                this.state.isEdit ?\n                  <Select style={{ width: '100%', flex: 1 }} value={emotion} onChange={this.handleEmotion}>\n                    <Option value={1}>单身</Option>\n                    <Option value={2}>离婚</Option>\n                    <Option value={3}>已婚</Option>\n                    <Option value={4}>恋爱</Option>\n                  </Select>\n                  :\n                  <div> {this.getEmotionType(emotion)}</div>\n              }\n            </Col>\n          </Row>\n          <Row>\n            <Col className={css.label}>个人签名：</Col>\n            <Col>{this.state.isEdit ? <Input value={signature} onChange={this.handleSignature} /> : <div>{signature}</div>}</Col>\n          </Row>\n          {this.state.loaded && <Row>\n            <Col className={css.label}>标签：</Col>\n            <Col>\n              <div>\n                {\n                  this.state.tagList.map((item, index) => {\n                    return <Tag key={item.tagId} className={css.tag}\n                      // id={`tag${index}`}\n                      closable={this.state.isEdit}\n                      onClose={e => { this.closeTag(e, item.tagId) }}\n                      // color={item.bgColor}\n                      style={{ backgroundColor: `${item.bgColor}`, }}\n                    // onClick={() => { this.selectTag(item, index); }}\n                    >{item.tagName}</Tag>\n                  })\n                }\n              </div>\n              {this.state.isEdit && <><Divider />\n                <div>\n                  {\n                    this.state.tags.map((item, index) => {\n                      return <span key={item.tagId} className={css.tag}\n                        id={`tag${index}`}\n                        style={{ color: `${this.state.tagList.includes(item.tagId) ? '#fff' : item.tagColor}` }}\n                        onClick={() => { this.selectTag(item, index); }}>{item.tagName}</span>\n                    })\n                  }\n                </div></>\n              }\n            </Col>\n          </Row>}\n        </div>\n\n      </div>\n    )\n  }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/basicInfo/TagEdit.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/component/addUserModal/AddUserModal.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/myUsers/MyUserList.js",["346","347","348","349","350","351","352"],"import React, { Component } from 'react';\nimport { Col, Row, Input, Avatar, Divider, Menu, Button, Tooltip, message, Select, List, Empty } from 'antd';\nimport { UserAddOutlined } from '@ant-design/icons/lib/icons';\nimport { getUsersList, getUsersApplyList, handleApply } from '@/remote'\nimport css from './MyUserList.less';\n\nexport default class MyUserList extends Component {\n  state = {\n    userList: [],\n    applyList: [],\n  }\n  componentDidMount() {\n    this.getData();\n    this.getUsersApply();\n  }\n  getData = async () => {\n    const resp = await getUsersList({ userId: +window.localStorage.getItem('userId') });\n    if (resp.status === 200) {\n      this.setState({\n        userList: resp.data.list || []\n      })\n    }\n  }\n  getUsersApply = async () => {\n    const resp = await getUsersApplyList({ userId: +window.localStorage.getItem('userId') });\n    if (resp.status === 200) {\n      this.setState({\n        applyList: resp.data.list || []\n      })\n    }\n  }\n  handleUserApply = async (e, recordId, status) => {\n    const params = {\n      recordId,\n      status, //1：通过，2：拒绝\n    }\n    const resp = await handleApply(params);\n    if (resp.status === 200) { // 处理完后刷新好友列表和好友申请列表\n      message.success(`已${status === 1 ? '通过' : '拒绝'}`);\n      if (status === 1) {\n        this.getData();\n        this.getUsersApply();\n      }\n    }\n  }\n  render() {\n    return (\n      <div className={css.myUserList}>\n        <div>\n          <p>我的好友申请</p>\n          {\n            this.state.applyList.length > 0 ?\n              <List itemLayout=\"horizontal\"\n                dataSource={this.state.applyList}\n                renderItem={item => (\n                  <List.Item\n                    actions={[<Button\n                      className={css.addUser} onClick={e => { this.handleUserApply(e, item.recordId, 1) }} >同意</Button>,\n                    <Button\n                      className={css.reject} onClick={e => { this.handleUserApply(e, item.recordId, 2) }} >拒绝</Button>\n                    ]}\n                  >\n                    <List.Item.Meta\n                      avatar={\n                        <Avatar src={item.photo} />\n                      }\n                      title={<span>{item.name}</span>}\n                      description={<span className={css.user_note}>{item.reason}</span>}\n                    />\n                  </List.Item>\n                )}>\n              </List>\n              :\n              <div style={{ paddingBottom: '20px' }}>\n                <Empty\n                  image={Empty.PRESENTED_IMAGE_SIMPLE}\n                  description={\n                    <span style={{ fontSize: '14px' }}>\n                      暂无好友申请\n      </span>\n                  }\n                >\n                </Empty>\n              </div>\n          }\n        </div>\n        <Divider style={{ margin: '0px 0px 20px 0px' }} />\n        <p>我的好友</p>\n        {\n          this.state.userList.length > 0 ?\n            <List itemLayout=\"horizontal\"\n              dataSource={this.state.userList}\n              renderItem={item => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={\n                      <Avatar src={item.photo} />\n                    }\n                    title={<span>{item.name}</span>}\n                    description={<span className=\"user_note\">{item.signature}</span>}\n                  />\n                </List.Item>\n              )}>\n            </List>\n            :\n            <div style={{ paddingBottom: '20px' }}>\n              <Empty\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                description={\n                  <span style={{ fontSize: '14px' }}>\n                    没有添加过任何好友\n                  </span>\n                }\n              >\n              </Empty>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/chatRoom/Socket.js",["353"],"class Socket {\n  constructor(url, key) {\n    this.url = url + key;\n    this.socket = '';\n    // this.init();\n  }\n  init() {\n    //判断当前浏览器支持不支持WebSocket\n    if ('WebSocket' in window) {\n      this.socket = new WebSocket(this.url);\n    } else {\n      // alertTip(\"该浏览器不支持WebSocket，请切换浏览器或升级后再试\");\n      return;\n    }\n    this.onopen();\n    // this.onclose();\n  }\n  onopen() {\n    this.socket.onopen = () => {\n      // alert(1)\n      console.log('链接成功！')\n    }\n  }\n  onclose() {\n    this.socket.onclose = () => {\n      // alert(2)\n      console.log('链接断开！')\n    }\n  }\n  onmessage(callback) {\n    this.socket.onmessage = (option) => {\n      let data = option.data;\n      if (data == '连接成功') {\n        return;\n      }\n      // console.log(data, 'data')\n      // data = eval(\"(\" + data + \")\");\n      // data = JSON.parse(data);\n      callback(data);\n    }\n  }\n  send(option) {\n    this.socket.send(option);\n  }\n  close() {\n    this.socket.close();\n  }\n}\nexport default Socket;\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/likeList/LikeList.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/personalInfo/commentList/CommentList.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/DataAnalysize.js",["354"],"import React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport css from './DataAnalysize.less';\nimport Area from './Area';\nimport UserLikeDatas from './userLikeDatas';\nimport UserActive from './UserActive';\nimport UserTags from './UserTags';\nimport { Divider } from 'antd';\n\nclass DataAnalysize extends Component {\n    render() {\n        return (\n            <div className={css.dataAnalysizePage}>\n                <div className={css.header}>\n                    用户数据监测中心\n                </div>\n                <div className={css.content}>\n                    <div className={css.left}>\n                        <div className={css.userActive}>\n                            <UserActive style={{ color: '#ffff' }} />\n                        </div>\n                        <div className={css.userTags}>\n                            <UserTags />\n                        </div>\n                    </div>\n                    <div className={css.middle}>\n                        <div className={css.userAera}>\n                            <Area />\n                        </div>\n                        <div>\n                            <UserLikeDatas />\n                        </div>\n                    </div>\n                    {/* <div className={css.right}>\n                    <div className={css.wordClouds}>\n                         \n                         词云\n                  \n                 </div>\n                    </div> */}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(DataAnalysize);\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/Area.js",["355","356","357"],"import React, { Component } from 'react';\nimport css from './DataAnalysize.less';\nimport { Switch } from 'antd';\nimport { getUsersArea, getLocation } from '@/remote';\nimport * as echarts from 'echarts/core';\nimport Bmap from 'echarts/extension/bmap/bmap';\nimport UserKeyWords from './UserKeyWords';\nimport {\n    TitleComponent,\n    TooltipComponent\n} from 'echarts/components';\nimport {\n    ScatterChart,\n    EffectScatterChart,\n    CustomChart\n} from 'echarts/charts';\nimport {\n    CanvasRenderer\n} from 'echarts/renderers';\n\necharts.use(\n    [TitleComponent, TooltipComponent, ScatterChart, EffectScatterChart, CustomChart, CanvasRenderer]\n);\n\nexport default class Area extends Component {\n    state = {\n        areaList: [],\n        geoCoordMap: {},\n        isDark: false,\n    };\n    componentDidMount() {\n        const self = this;\n        this.getUsersAreas().then(() => {\n            this.getLocation();\n        }).then(() => {\n            setTimeout(() => {\n                self.getAreasDatas();\n            }, 300)\n\n        })\n    }\n    onChange = (checked) => {\n        this.setState({\n            isDark: checked\n        });\n    }\n\n    getUsersAreas = async () => {\n        const resp = await getUsersArea({});\n        if (resp.status === 200) {\n            this.setState({\n                areaList: resp.data.list.map(item => {\n                    return {\n                        name: item.name.split(' ')[1],\n                        value: item.value\n                    }\n                })\n            })\n        }\n    };\n    getLocation = () => {\n        const obj = {};\n        this.state.areaList.forEach(async (item) => {\n            const url = 'https://restapi.amap.com/v3/geocode/geo?key=e335af8f89f7e1e90e2bec14c2149ebf&address=' + item.name;\n            const res = await fetch(url, {\n                method: 'get',\n                mode: 'cors'\n            });\n            res.json().then(resp => {\n                if (resp.status === '1') {\n                    obj[item.name] = resp.geocodes[0].location.split(',').map(item => Number(item));\n                    this.setState({\n                        geoCoordMap: obj\n                    });\n                }\n            });\n        });\n    };\n    convertData = (data) => {\n        var res = [];\n        const { geoCoordMap } = this.state;\n        for (var i = 0; i < data.length; i++) {\n            var key = data[i].name;\n            if (key) {\n                res.push({\n                    name: key,\n                    value: geoCoordMap[key].concat(data[i].value)\n                });\n            }\n        }\n        return res;\n    };\n    getAreasDatas = () => {\n        const data = this.state.areaList;\n        // const them = this.state.isDark;\n        var chartDom = document.getElementById('area');\n        var myChart = echarts.init(chartDom);\n        var option;\n        option = {\n            title: {\n                text: '用户地区分布',\n                subtext: '',\n                sublink: '',\n                left: 'center',\n                textStyle: {\n                    color: '#fff'\n                }\n            },\n            tooltip: {\n                trigger: 'item'\n            },\n            bmap: {\n                center: [116.407526, 39.90403],\n                zoom: 5,\n                roam: true,\n                mapStyle: {\n                    styleJson: [{\n                        \"featureType\": \"water\",\n                        \"elementType\": \"all\",\n                        \"stylers\": {\n                            \"color\": \"#044161\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"land\",\n                        \"elementType\": \"all\",\n                        \"stylers\": {\n                            \"color\": \"#0F0D28\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"boundary\",\n                        \"elementType\": \"geometry\",\n                        \"stylers\": {\n                            \"color\": \"#064f85\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"railway\",\n                        \"elementType\": \"all\",\n                        \"stylers\": {\n                            \"visibility\": \"off\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"highway\",\n                        \"elementType\": \"geometry\",\n                        \"stylers\": {\n                            \"color\": \"#004981\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"highway\",\n                        \"elementType\": \"geometry.fill\",\n                        \"stylers\": {\n                            \"color\": \"#005b96\",\n                            \"lightness\": 1\n                        }\n                    },\n                    {\n                        \"featureType\": \"highway\",\n                        \"elementType\": \"labels\",\n                        \"stylers\": {\n                            \"visibility\": \"off\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"arterial\",\n                        \"elementType\": \"geometry\",\n                        \"stylers\": {\n                            \"color\": \"#004981\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"arterial\",\n                        \"elementType\": \"geometry.fill\",\n                        \"stylers\": {\n                            \"color\": \"#00508b\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"poi\",\n                        \"elementType\": \"all\",\n                        \"stylers\": {\n                            \"visibility\": \"off\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"green\",\n                        \"elementType\": \"all\",\n                        \"stylers\": {\n                            \"color\": \"#056197\",\n                            \"visibility\": \"off\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"subway\",\n                        \"elementType\": \"all\",\n                        \"stylers\": {\n                            \"visibility\": \"off\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"manmade\",\n                        \"elementType\": \"all\",\n                        \"stylers\": {\n                            \"visibility\": \"off\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"local\",\n                        \"elementType\": \"all\",\n                        \"stylers\": {\n                            \"visibility\": \"off\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"arterial\",\n                        \"elementType\": \"labels\",\n                        \"stylers\": {\n                            \"visibility\": \"off\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"boundary\",\n                        \"elementType\": \"geometry.fill\",\n                        \"stylers\": {\n                            \"color\": \"#029fd4\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"building\",\n                        \"elementType\": \"all\",\n                        \"stylers\": {\n                            \"color\": \"#1a5787\"\n                        }\n                    },\n                    {\n                        \"featureType\": \"label\",\n                        \"elementType\": \"all\",\n                        \"stylers\": {\n                            \"visibility\": \"off\"\n                        }\n                    }]\n                }\n            },\n            series: [\n                {\n                    name: '人数',\n                    type: 'scatter',\n                    coordinateSystem: 'bmap',\n                    data: this.convertData(data),\n                    symbolSize: function (val) {\n                        return val[2] / 0.1;\n                        // return val[2] / 10;\n                    },\n                    encode: {\n                        value: 2\n                    },\n                    label: {\n                        formatter: '{b}',\n                        position: 'right',\n                        show: true\n                    },\n                    itemStyle: {\n                        color: '#ddb926'\n                    },\n                    emphasis: {\n                        label: {\n                            show: true\n                        }\n                    }\n                },\n            ]\n        };\n        option && myChart.setOption(option);\n\n    };\n    render() {\n        return (\n            <div className={css.area}>\n                {/* <div className={css.title}>用户地区分布</div> */}\n                <div id='area' style={{ width: '900px', height: '520px', margin: '7px 0px' }} />\n                <UserKeyWords />\n            </div>\n\n        );\n    }\n}\n\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/getLocation.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/userLikeDatas.js",["358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375"],"import React, { Component } from 'react';\nimport { getLikeTopList, getTextKeyWords } from '@/remote';\nimport { getKeyWords, getUrl } from '@/utils/userLikeDatas';\nimport { getInfos } from '@/utils/get';\nimport css from './DataAnalysize.less';\nimport { getColors, getTagColors, getFontsize } from '@/utils/TagColor';\nimport wordNumDatas from '@/keyWordNum.json';\nimport { resultData } from '@/resultData';\nimport {\n    observable,\n    computed,\n    action\n} from \"mobx\";\nimport {\n    observer,\n    inject\n} from \"mobx-react\";\nimport * as echarts from 'echarts/core';\nimport {\n    TitleComponent,\n    GridComponent,\n    DataZoomComponent\n} from 'echarts/components';\nimport {\n    BarChart\n} from 'echarts/charts';\nimport {\n    CanvasRenderer\n} from 'echarts/renderers';\n\necharts.use(\n    [TitleComponent, GridComponent, DataZoomComponent, BarChart, CanvasRenderer]\n);\n\nvar ROOT_PATH = 'https://cdn.jsdelivr.net/gh/apache/echarts-website@asf-site/examples';\nvar app = {};\n\nlet FormData = window.FormData;\nlet formdata = new FormData();\n@inject('Store')\n@observer class UserLikeDatas extends Component {\n    state = {\n        hotList: [],\n        loaded: false,\n        wordNumDatas: [], // 词频\n        wordsWeightDatas: [], //关键词权重\n        resultDatas: [], // 词频+关键词权重\n        content: '',\n        wordLoaded: false,\n        chartsLoaded: false,\n    }\n    async componentDidMount() {\n        await this.getTopFiveList();\n        // this.getResultDatas();\n        await this.getWordNumDatas();\n        // await this.getKeyWordsDatas();\n        this.getEcharts();\n    }\n    getTopFiveList = async () => {\n        try {\n            const resp = await getLikeTopList({});\n            if (resp.status === 200) {\n                let str = '';\n                this.setState({\n                    hotList: resp.data.list || [],\n                })\n                resp.data.list.forEach(item => {\n                    str += item.content;\n                });\n                this.setState({\n                    content: str\n                })\n            }\n        } catch (e) {\n\n        } finally {\n            this.setState({\n                loaded: true\n            });\n        }\n\n    };\n    getUrls = (baseUrl, data) => {\n        let url = '';\n        let dataStr = \"\"; // 数据拼接字符串\n        Object.keys(data).forEach((key) => {\n            dataStr += `${key}=${data[key]}&`;\n        });\n        if (dataStr !== \"\") {\n            dataStr = dataStr.substr(0, dataStr.lastIndexOf(\"&\"));\n            url = `${baseUrl}?${dataStr}`;\n        }\n        return {\n            dataStr: dataStr,\n            url: url,\n        }\n    }\n    getWordNumDatas = async () => {\n        await this.getKeyWordsDatas();\n        this.getResultDatas();\n        return;\n        let data = [];\n        try {\n            const reg = /^([0-9_-]|[\"',，.。/、\\]\\[【】\\\\n\\s！!?？——_<>%;‘’；：)《（）》(&+=`“”·*#@@]){0,}$/;\n            const appcode = 'f98fb0d210d248c192992ef782583cbd';\n            const baseUrl = 'https://counter.market.alicloudapi.com/ai_market/ai_nlp/word_split_count/v1?STRING='\n            this.state.hotList.forEach(item => {\n                fetch(baseUrl + item.content, {\n                    method: 'post',\n                    headers: {\n                        \"Authorization\": \"APPCODE \" + appcode,\n                        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n                    },\n                }).then(res => {\n                    res.json().then(resp => {\n                        let result = resp['自然语言分析_词频统计分析实体信息'].map(it => {\n                            return {\n                                text: it['文本'],\n                                length: +it['文本长度'],\n                                count: +it['文本出现频次'],\n                            }\n                        })\n                        result = result.filter(it => { // 过滤掉字符\n                            return !reg.test(it.text)\n                        });\n                        result = result.filter(it => { // 过滤掉单个文字和频率<=1的词汇\n                            return it.length > 1;\n                        })\n                        data = data.concat(result);\n                        // data = data.sort((a, b) => {\n                        //     return b.count - a.count\n                        // }).slice(0, 19);\n                        // console.log(data);\n                        this.setState({\n                            wordNumDatas: [...data].map(it => {\n                                return {\n                                    name: it.text,\n                                    value: it.count\n                                }\n                            })\n                        }, () => {\n                            this.getKeyWordsDatas();\n                            // this.getEcharts();\n                            this.setState({\n                                wordLoaded: true\n                            })\n                        });\n                    })\n\n                })\n            })\n        } catch (e) {\n\n        } finally {\n\n        }\n    }\n    getKeyWordsDatas = async () => {\n        return;\n        let data = [];\n        const appcode = 'f98fb0d210d248c192992ef782583cbd';\n        const baseUrl = 'http://gjccq.market.alicloudapi.com/rest/160601/text_analysis/key_words_extraction.json';\n        this.state.hotList.forEach(item => {\n            const params =\n            {\n                \"inputs\": [{\n                    \"text\": {   // 表示文章内容，dataType为数据类型，dataValue是具体内容（UTF8编码）\n                        \"dataType\": 50,  // 数据类型：1:bool 10:int32 20:int64 30:float 40:double 50:string\n                        \"dataValue\": item.content\n                    },\n                    \"config\": { // 算法参数，用json序列化后的string表示\n                        \"dataType\": 50,\n                        \"dataValue\": \"{\\\"topN\\\": 3, \\\"similarityType\\\": \\\"lcs\\\",\\\"delimiter\\\":\\\"。！？\\\"}\"\n                    }\n                }]\n            }\n            fetch(baseUrl, {\n                method: 'post',\n                headers: {\n                    \"Authorization\": \"APPCODE \" + appcode,\n                    \"Content-Type\": \"application/json; charset=UTF-8\"\n                },\n                body: JSON.stringify(params)\n            }).then(res => {\n                res.json().then(resp => {\n                    const result = JSON.parse(resp.outputs[0].outputValue.dataValue);\n                    const wordsWeight = result['words weight'].map(it => {\n                        return {\n                            name: it.word,\n                            value: it.weight,\n                        }\n                    })\n                    data = data.concat(wordsWeight);\n                    // console.log(data);\n                    this.setState({\n                        wordsWeightDatas: [...data]\n                    }, () => {\n                        this.getResultDatas();\n                    });\n                })\n            })\n        })\n    }\n    getResultDatas = () => {\n        this.props.Store.setValue(resultData);\n        return;\n        let data = [];\n        this.state.wordsWeightDatas.forEach(item => {\n            const idx = wordNumDatas.findIndex(it => it.name === item.name);\n            if (idx > -1) {\n                data.push([Math.round(item.value * 10 * 100) / 100, wordNumDatas[idx].value, item.name])\n            }\n        });\n        this.props.Store.setValue(data);\n        // console.log(this.props.Store.data);\n        // this.setState({\n        //     resultDatas: [...data],\n        // }, () => {\n        //     this.props.Store.setValue(data);\n        // })\n\n    }\n    getEcharts = () => {\n        console.log('echarts');\n        // const { wordNumDatas } = this.state;\n        let datas = wordNumDatas.filter(it => { // 过滤掉单个文字和频率<=1的词汇\n            return it.value > 1;\n        });\n        const data = datas.map(it => it.value).slice(0, 19)\n        const dataAxis = datas.map(it => it.name).slice(0, 19)\n        var chartDom = document.getElementById('keyWordsBar');\n        var myChart = echarts.init(chartDom, 'dark');\n        var yMax = 500;\n        var dataShadow = [];\n\n        for (var i = 0; i < datas.length; i++) {\n            dataShadow.push(yMax);\n        }\n\n        var option = {\n            title: {\n                text: '点赞帖子关键词',\n                subtext: ''\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                    type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                },\n                formatter: function (params) {\n                    return params[0].axisValue + \" \" + data[params[0].dataIndex];\n\n                }\n            },\n            xAxis: {\n                data: dataAxis,\n                axisLabel: {\n                    inside: true,\n                    textStyle: {\n                        color: '#fff'\n                    }\n                },\n                axisTick: {\n                    show: false\n                },\n                axisLine: {\n                    show: false\n                },\n                z: 10\n            },\n            yAxis: {\n                axisLine: {\n                    show: false\n                },\n                axisTick: {\n                    show: false\n                },\n                axisLabel: {\n                    textStyle: {\n                        color: '#999'\n                    }\n                }\n            },\n            dataZoom: [\n                {\n                    type: 'inside'\n                }\n            ],\n            series: [\n                {\n                    type: 'bar',\n                    showBackground: true,\n                    itemStyle: {\n                        color: new echarts.graphic.LinearGradient(\n                            0, 0, 0, 1,\n                            [\n                                { offset: 0, color: '#83bff6' },\n                                { offset: 0.5, color: '#188df0' },\n                                { offset: 1, color: '#188df0' }\n                            ]\n                        )\n                    },\n                    emphasis: {\n                        itemStyle: {\n                            color: new echarts.graphic.LinearGradient(\n                                0, 0, 0, 1,\n                                [\n                                    { offset: 0, color: '#2378f7' },\n                                    { offset: 0.7, color: '#2378f7' },\n                                    { offset: 1, color: '#83bff6' }\n                                ]\n                            )\n                        }\n                    },\n                    data: data\n                }\n            ]\n        };\n\n        // Enable data zoom when user click bar.\n        var zoomSize = 6;\n        myChart.on('click', function (params) {\n            myChart.dispatchAction({\n                type: 'dataZoom',\n                startValue: dataAxis[Math.max(params.dataIndex - zoomSize / 2, 0)],\n                endValue: dataAxis[Math.min(params.dataIndex + zoomSize / 2, data.length - 1)]\n            });\n        });\n\n        option && myChart.setOption(option);\n        console.log(myChart);\n    }\n    render() {\n        return (\n            <div style={{\n                display: 'flex',\n            }}>\n                <div style={{ flex: 1 }}>\n                    {\n                        <div id=\"keyWordsBar\" style={{ width: '900px', height: '470px', paddingTop: '5px' }}></div>\n                    }\n                </div>\n\n                {/* 点赞关键词提取 */}\n                <div style={{\n                    borderLeft: '1px solid #484752',\n                    flex: 1\n                }}>\n                    {\n                        // this.state.wordLoaded &&\n                        <div className={css.wordCloud}>\n                            {\n                                wordNumDatas.map(item => {\n                                    return <span style={{ color: `${getColors()}`, fontSize: `${getFontsize()}` }} className={css.word}>{item.name}</span>\n                                })\n                            }\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UserLikeDatas;\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/userLikeDatas.js",["376","377","378","379","380"],"// // Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher\n// const tencentcloud = require(\"tencentcloud-sdk-nodejs\");\n// import * as tencentcloud from 'tencentcloud-sdk-nodejs';\n\n// const NlpClient = tencentcloud.nlp.v20190408.Client;\n//\n// const clientConfig = {\n//     credential: {\n//         secretId: \"AKIDmKdfy20w2MQdbNGfv846vAE1Z5KKoIk5\",\n//         secretKey: \"DBuMYOy3vX1EC2k7NyJQhEWXIp7A4aFd\",\n//     },\n//     region: \"ap-guangzhou\",\n//     profile: {\n//         httpProfile: {\n//             endpoint: \"nlp.tencentcloudapi.com\",\n//         },\n//     },\n// };\n//\n// const client = new NlpClient(clientConfig);\n// export const getKeyWord = (params) => {\n//     client.KeywordsExtraction(params).then(\n//         (data) => {\n//             console.log(data);\n//         },\n//         (err) => {\n//             console.error(\"error\", err);\n//         }\n//     );\n// }\nconst crypto = require('crypto');\n\nfunction sha256(message, secret = '', encoding) {\n    const hmac = crypto.createHmac('sha256', secret)\n    return hmac.update(message).digest(encoding)\n}\nfunction getHash(message, encoding = 'hex') {\n    const hash = crypto.createHash('sha256')\n    return hash.update(message).digest(encoding)\n}\nfunction getDate(timestamp) {\n    const date = new Date(timestamp * 1000)\n    const year = date.getUTCFullYear()\n    const month = ('0' + (date.getUTCMonth() + 1)).slice(-2)\n    const day = ('0' + date.getUTCDate()).slice(-2)\n    return `${year}-${month}-${day}`\n}\nexport function getUrl(){\n    // 密钥参数\n    const SECRET_ID = \"AKIDmKdfy20w2MQdbNGfv846vAE1Z5KKoIk5\"\n    const SECRET_KEY = \"DBuMYOy3vX1EC2k7NyJQhEWXIp7A4aFd\"\n\n    const endpoint = \"nlp.tencentcloudapi.com\"\n    const service = \"nlp\"\n    const region = \"ap-guangzhou\"\n    const action = \"KeywordsExtraction\"\n    const version = \"2019-04-08\"\n    // const timestamp = Math.round(Date.now() / 1000);\n    const Text = 'text';\n    const timestamp = Math.round(new Date()/1000)\n    //时间处理, 获取世界时间日期\n    const date = getDate(timestamp)\n\n    // ************* 步骤 1：拼接规范请求串 *************\n    const signedHeaders = \"content-type;host\"\n\n    const payload = \"{\\\"Limit\\\": 1, \\\"Filters\\\": [{\\\"Values\\\": [\\\"\\\\u672a\\\\u547d\\\\u540d\\\"], \\\"Name\\\": \\\"instance-name\\\"}]}\"\n\n    // const hashedRequestPayload = getHash(payload);\n    const httpRequestMethod = \"POST\"\n    const canonicalUri = \"/\"\n    const canonicalQueryString = \"\"\n    const canonicalHeaders = \"content-type:application/json; charset=utf-8\\n\" + \"host:\" + endpoint + \"\\n\"\n\n    const canonicalRequest = httpRequestMethod + \"\\n\"\n        + canonicalUri + \"\\n\"\n        + canonicalQueryString + \"\\n\"\n        + canonicalHeaders + \"\\n\"\n        + signedHeaders + \"\\n\"\n        // + hashedRequestPayload\n    console.log(canonicalRequest)\n    console.log(\"----------------------------\")\n\n    // ************* 步骤 2：拼接待签名字符串 *************\n    const algorithm = \"TC3-HMAC-SHA256\"\n    const hashedCanonicalRequest = getHash(canonicalRequest);\n    const credentialScope = date + \"/\" + service + \"/\" + \"tc3_request\"\n    const stringToSign = algorithm + \"\\n\" +\n        timestamp + \"\\n\" +\n        credentialScope + \"\\n\" +\n        hashedCanonicalRequest\n    console.log(stringToSign)\n    console.log(\"----------------------------\")\n\n    // ************* 步骤 3：计算签名 *************\n    const kDate = sha256(date, 'TC3' + SECRET_KEY)\n    const kService = sha256(service, kDate)\n    const kSigning = sha256('tc3_request', kService)\n    const signature = sha256(stringToSign, kSigning, 'hex')\n    console.log(signature);\n    console.log(timestamp.toString());\n    console.log(\"----------------------------\")\n\n    // ************* 步骤 4：拼接 Authorization *************\n    const authorization = algorithm + \" \" +\n        \"Credential=\" + SECRET_ID + \"/\" + credentialScope + \", \" +\n        \"SignedHeaders=\" + signedHeaders + \", \" +\n        \"Signature=\" + signature\n    console.log(authorization)\n    console.log(\"----------------------------\")\n\n    const Call_Information = 'curl -X POST ' + \"https://\" + endpoint\n        + ' -H \"Authorization: ' + authorization + '\"'\n        + ' -H \"Content-Type: application/json; charset=utf-8\"'\n        + ' -H \"Host: ' + endpoint + '\"'\n        + ' -H \"X-TC-Action: ' + action + '\"'\n        + ' -H \"X-TC-Timestamp: ' + timestamp.toString() + '\"'\n        + ' -H \"X-TC-Version: ' + version + '\"'\n        + ' -H \"X-TC-Region: ' + region + '\"'\n        + '-d ' + Text\n    // return Call_Information;\n    return {\n        signature:signature,\n        authorization:authorization\n    }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/utils/get.js",["381"],"const crypto = require('crypto');\n\nfunction get_req_url(params, endpoint) {\n    params['Signature'] = escape(params['Signature']);\n    const url_strParam = sort_params(params)\n    return \"https://\" + endpoint + \"/?\" + url_strParam.slice(1);\n}\n\nfunction formatSignString(reqMethod, endpoint, path, strParam) {\n    let strSign = reqMethod + endpoint + path + \"?\" + strParam.slice(1);\n    return strSign;\n}\nfunction sha1(secretKey, strsign) {\n    let signMethodMap = { 'HmacSHA1': \"sha1\" };\n    let hmac = crypto.createHmac(signMethodMap['HmacSHA1'], secretKey || \"\");\n    return hmac.update(Buffer.from(strsign, 'utf8')).digest('base64')\n}\n\nfunction sort_params(params) {\n    let strParam = \"\";\n    let keys = Object.keys(params);\n    keys.sort();\n    for (let k in keys) {\n        //k = k.replace(/_/g, '.');\n        strParam += (\"&\" + keys[k] + \"=\" + params[keys[k]]);\n    }\n    return strParam\n}\n\nexport function getInfos(text) {\n    // 密钥参数\n    const SECRET_ID = \"AKIDmKdfy20w2MQdbNGfv846vAE1Z5KKoIk5\"\n    const SECRET_KEY = \"DBuMYOy3vX1EC2k7NyJQhEWXIp7A4aFd\"\n\n    const endpoint = \"nlp.tencentcloudapi.com\"\n    const Region = \"ap-guangzhou\"\n    const Version = \"2019-04-08\"\n    const Action = \"KeywordsExtraction\"\n    // const Timestamp = 1465185768  // 时间戳 2016-06-06 12:02:48, 此参数作为示例，以实际为准\n    const Timestamp = Math.round(new Date() / 1000);\n    console.log(Timestamp);\n    // const Nonce = 11886  // 随机正整数\n    const Nonce = Math.round(Math.random() * 65535)\n\n    let params = {};\n    params['Action'] = Action;\n    // params['InstanceIds.0'] = 'ins-09dx96dg';\n    // params['Limit'] = 20;\n    // params['Offset'] = 0;\n    params['Nonce'] = Nonce;\n    params['Region'] = Region;\n    params['SecretId'] = SECRET_ID;\n    params['Timestamp'] = Timestamp;\n    params['Version'] = Version;\n\n    // 1. 对参数排序,并拼接请求字符串\n    let strParam = sort_params(params)\n\n    // 2. 拼接签名原文字符串\n    const reqMethod = \"GET\";\n    const path = \"/\";\n    let strSign = formatSignString(reqMethod, endpoint, path, strParam)\n\n    // 3. 生成签名串\n    params['Signature'] = sha1(SECRET_KEY, strSign)\n\n    // 4. 进行url编码并拼接请求url\n    const req_url = get_req_url(params, endpoint)\n    // console.log(params['Signature'])\n    return {\n        params: params,\n        // Signature: params['Signature']\n    }\n}\n","/Users/jingmeimei/Desktop/webBlog/webblog/src/remote/getTextWords.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/UserActive.js",[],"/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/UserTags.js",["382","383","384","385"],"/Users/jingmeimei/Desktop/webBlog/webblog/src/store/storeClasee.js",["386"],"import { observable, computed, action } from 'mobx';\nimport { makeObservable } from \"mobx\";\n\nclass StoreClass {\n  @observable data;\n  constructor() {\n    makeObservable(this)\n    this.data = [];\n  }\n  @action.bound\n  setValue = (data) => {\n    this.data = [...data];\n    // console.log(data);\n  }\n}\nconst Store = new StoreClass();\n\nexport default Store;","/Users/jingmeimei/Desktop/webBlog/webblog/src/page/dataAnalysize/UserKeyWords.js",["387","388","389","390","391","392"],"import React, { Component } from 'react'\nimport css from './DataAnalysize.less';\nimport { getColors, getTagColors, getFontsize } from '@/utils/TagColor';\nimport { getTagUserList } from '@/remote';\nimport {\n  observer,\n  inject\n} from \"mobx-react\";\nimport * as echarts from 'echarts/core';\nimport {\n  TooltipComponent,\n  GridComponent\n} from 'echarts/components';\nimport {\n  ScatterChart\n} from 'echarts/charts';\nimport {\n  CanvasRenderer\n} from 'echarts/renderers';\n\necharts.use(\n  [TooltipComponent, GridComponent, ScatterChart, CanvasRenderer]\n);\n@inject('Store')\n@observer class UserKeyWords extends Component {\n  state = {\n    tagList: [\n      // { name: '互联网民工', value: 2 },\n      // { name: '打工人', value: 2 },\n      // { name: '音乐控', value: 2 },\n      // { name: '二次元', value: 2 },\n      // { name: '快乐水', value: 1 },\n      // { name: '肥宅', value: 2 },\n    ],\n    loaded: false,\n  }\n  async componentDidMount() {\n    // await this.getTagList();\n    const self = this;\n    setTimeout(() => {\n      self.getEcharts();\n    }, 1000)\n  }\n  getTagList = async () => {\n    try {\n      const resp = await getTagUserList({});\n      if (resp.status === 200) {\n        this.setState({\n          tagList: resp.data.list || []\n        })\n      }\n    } catch (e) {\n\n    } finally {\n      this.setState({\n        loaded: true\n      })\n    }\n  }\n  getEcharts = () => {\n    var chartDom = document.getElementById('keyWords');\n    var myChart = echarts.init(chartDom, 'dark');\n    var option;\n\n    var data = this.props.Store.data;\n    // console.log(data);\n\n    option = {\n      title: {\n        text: '关键词权重和频率关系散点图'\n      },\n      color: '#dd4444',\n      xAxis: {\n        type: 'value',\n        name: '权重',\n        splitLine: {\n          show: false\n        },\n      },\n      yAxis: {\n        type: 'value',\n        name: '词频',\n        splitLine: {\n          show: false\n        },\n      },\n      tooltip: {\n        backgroundColor: ['rgba(255,255,255,0.7)'],\n        formatter: function (obj) {\n          var value = obj.value;\n          return '关键词：' + value[2] + '<br/>' + '权重：' + value[0] + '<br/>' + '频率：' + value[1];\n\n        }\n      },\n      series: [{\n        symbolSize: 15,\n        data: data,\n        type: 'scatter'\n      }]\n    };\n    option && myChart.setOption(option);\n\n  }\n  render() {\n    return (\n      // <div className={css.wrap}>\n      //   <div className={css.cube}>\n      //     {\n      //       this.state.tagList.slice(0, 6).map((item, index) => {\n      //         return <div className={css[`plane-${index}`]} style={{ color: `${getColors()}` }}>{item.name}</div>\n      //       })\n      //     }\n      //   </div>\n      // </div>\n      <div id=\"keyWords\" style={{ width: '400px', height: '534px', borderLeft: '1px solid #484752' }}>\n\n      </div>\n    )\n  }\n}\n\n\nexport default UserKeyWords;","/Users/jingmeimei/Desktop/webBlog/webblog/src/resultData.js",[],{"ruleId":"393","severity":1,"message":"394","line":3,"column":8,"nodeType":"395","messageId":"396","endLine":3,"endColumn":11},{"ruleId":"393","severity":1,"message":"397","line":6,"column":10,"nodeType":"395","messageId":"396","endLine":6,"endColumn":19},{"ruleId":"398","replacedBy":"399"},{"ruleId":"400","replacedBy":"401"},{"ruleId":"393","severity":1,"message":"402","line":2,"column":8,"nodeType":"395","messageId":"396","endLine":2,"endColumn":12},{"ruleId":"403","severity":1,"message":"404","line":9,"column":25,"nodeType":"405","endLine":9,"endColumn":30},{"ruleId":"393","severity":1,"message":"406","line":3,"column":59,"nodeType":"395","messageId":"396","endLine":3,"endColumn":66},{"ruleId":"393","severity":1,"message":"407","line":4,"column":10,"nodeType":"395","messageId":"396","endLine":4,"endColumn":29},{"ruleId":"393","severity":1,"message":"408","line":11,"column":9,"nodeType":"395","messageId":"396","endLine":11,"endColumn":15},{"ruleId":"393","severity":1,"message":"409","line":12,"column":9,"nodeType":"395","messageId":"396","endLine":12,"endColumn":15},{"ruleId":"393","severity":1,"message":"410","line":5,"column":8,"nodeType":"395","messageId":"396","endLine":5,"endColumn":14},{"ruleId":"393","severity":1,"message":"411","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":13},{"ruleId":"393","severity":1,"message":"412","line":3,"column":15,"nodeType":"395","messageId":"396","endLine":3,"endColumn":18},{"ruleId":"393","severity":1,"message":"413","line":3,"column":20,"nodeType":"395","messageId":"396","endLine":3,"endColumn":25},{"ruleId":"393","severity":1,"message":"414","line":3,"column":35,"nodeType":"395","messageId":"396","endLine":3,"endColumn":42},{"ruleId":"393","severity":1,"message":"415","line":3,"column":44,"nodeType":"395","messageId":"396","endLine":3,"endColumn":48},{"ruleId":"393","severity":1,"message":"416","line":4,"column":10,"nodeType":"395","messageId":"396","endLine":4,"endColumn":22},{"ruleId":"393","severity":1,"message":"417","line":8,"column":7,"nodeType":"395","messageId":"396","endLine":8,"endColumn":10},{"ruleId":"393","severity":1,"message":"418","line":2,"column":16,"nodeType":"395","messageId":"396","endLine":2,"endColumn":23},{"ruleId":"393","severity":1,"message":"419","line":6,"column":10,"nodeType":"395","messageId":"396","endLine":6,"endColumn":27},{"ruleId":"393","severity":1,"message":"420","line":6,"column":64,"nodeType":"395","messageId":"396","endLine":6,"endColumn":76},{"ruleId":"393","severity":1,"message":"421","line":8,"column":9,"nodeType":"395","messageId":"396","endLine":8,"endColumn":16},{"ruleId":"393","severity":1,"message":"422","line":2,"column":32,"nodeType":"395","messageId":"396","endLine":2,"endColumn":40},{"ruleId":"393","severity":1,"message":"423","line":2,"column":42,"nodeType":"395","messageId":"396","endLine":2,"endColumn":47},{"ruleId":"393","severity":1,"message":"424","line":2,"column":36,"nodeType":"395","messageId":"396","endLine":2,"endColumn":42},{"ruleId":"393","severity":1,"message":"425","line":9,"column":68,"nodeType":"395","messageId":"396","endLine":9,"endColumn":81},{"ruleId":"393","severity":1,"message":"426","line":28,"column":15,"nodeType":"395","messageId":"396","endLine":28,"endColumn":18},{"ruleId":"393","severity":1,"message":"427","line":4,"column":38,"nodeType":"395","messageId":"396","endLine":4,"endColumn":44},{"ruleId":"393","severity":1,"message":"428","line":4,"column":46,"nodeType":"395","messageId":"396","endLine":4,"endColumn":52},{"ruleId":"393","severity":1,"message":"429","line":7,"column":10,"nodeType":"395","messageId":"396","endLine":7,"endColumn":17},{"ruleId":"393","severity":1,"message":"430","line":8,"column":10,"nodeType":"395","messageId":"396","endLine":8,"endColumn":16},{"ruleId":"393","severity":1,"message":"431","line":8,"column":18,"nodeType":"395","messageId":"396","endLine":8,"endColumn":28},{"ruleId":"393","severity":1,"message":"432","line":8,"column":30,"nodeType":"395","messageId":"396","endLine":8,"endColumn":41},{"ruleId":"393","severity":1,"message":"433","line":10,"column":10,"nodeType":"395","messageId":"396","endLine":10,"endColumn":18},{"ruleId":"393","severity":1,"message":"434","line":13,"column":9,"nodeType":"395","messageId":"396","endLine":13,"endColumn":16},{"ruleId":"393","severity":1,"message":"435","line":3,"column":62,"nodeType":"395","messageId":"396","endLine":3,"endColumn":72},{"ruleId":"393","severity":1,"message":"436","line":4,"column":10,"nodeType":"395","messageId":"396","endLine":4,"endColumn":24},{"ruleId":"393","severity":1,"message":"437","line":4,"column":57,"nodeType":"395","messageId":"396","endLine":4,"endColumn":82},{"ruleId":"393","severity":1,"message":"438","line":8,"column":10,"nodeType":"395","messageId":"396","endLine":8,"endColumn":18},{"ruleId":"393","severity":1,"message":"439","line":11,"column":9,"nodeType":"395","messageId":"396","endLine":11,"endColumn":16},{"ruleId":"393","severity":1,"message":"440","line":112,"column":15,"nodeType":"395","messageId":"396","endLine":112,"endColumn":21},{"ruleId":"393","severity":1,"message":"441","line":119,"column":15,"nodeType":"395","messageId":"396","endLine":119,"endColumn":23},{"ruleId":"393","severity":1,"message":"411","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":13},{"ruleId":"393","severity":1,"message":"412","line":3,"column":15,"nodeType":"395","messageId":"396","endLine":3,"endColumn":18},{"ruleId":"393","severity":1,"message":"442","line":3,"column":35,"nodeType":"395","messageId":"396","endLine":3,"endColumn":42},{"ruleId":"393","severity":1,"message":"415","line":3,"column":44,"nodeType":"395","messageId":"396","endLine":3,"endColumn":48},{"ruleId":"393","severity":1,"message":"406","line":3,"column":58,"nodeType":"395","messageId":"396","endLine":3,"endColumn":65},{"ruleId":"393","severity":1,"message":"428","line":3,"column":76,"nodeType":"395","messageId":"396","endLine":3,"endColumn":82},{"ruleId":"393","severity":1,"message":"443","line":3,"column":90,"nodeType":"395","messageId":"396","endLine":3,"endColumn":95},{"ruleId":"393","severity":1,"message":"444","line":5,"column":39,"nodeType":"395","messageId":"396","endLine":5,"endColumn":50},{"ruleId":"393","severity":1,"message":"445","line":12,"column":5,"nodeType":"395","messageId":"396","endLine":12,"endColumn":14},{"ruleId":"446","severity":1,"message":"447","line":4,"column":1,"nodeType":"448","endLine":59,"endColumn":3},{"ruleId":"393","severity":1,"message":"449","line":1,"column":28,"nodeType":"395","messageId":"396","endLine":1,"endColumn":36},{"ruleId":"393","severity":1,"message":"450","line":3,"column":25,"nodeType":"395","messageId":"396","endLine":3,"endColumn":29},{"ruleId":"393","severity":1,"message":"451","line":3,"column":31,"nodeType":"395","messageId":"396","endLine":3,"endColumn":36},{"ruleId":"393","severity":1,"message":"452","line":3,"column":63,"nodeType":"395","messageId":"396","endLine":3,"endColumn":66},{"ruleId":"393","severity":1,"message":"433","line":4,"column":22,"nodeType":"395","messageId":"396","endLine":4,"endColumn":30},{"ruleId":"393","severity":1,"message":"453","line":4,"column":32,"nodeType":"395","messageId":"396","endLine":4,"endColumn":37},{"ruleId":"393","severity":1,"message":"454","line":168,"column":23,"nodeType":"395","messageId":"396","endLine":168,"endColumn":27},{"ruleId":"393","severity":1,"message":"455","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":14},{"ruleId":"393","severity":1,"message":"456","line":3,"column":16,"nodeType":"395","messageId":"396","endLine":3,"endColumn":22},{"ruleId":"393","severity":1,"message":"422","line":3,"column":32,"nodeType":"395","messageId":"396","endLine":3,"endColumn":40},{"ruleId":"393","severity":1,"message":"423","line":3,"column":42,"nodeType":"395","messageId":"396","endLine":3,"endColumn":47},{"ruleId":"393","severity":1,"message":"413","line":3,"column":49,"nodeType":"395","messageId":"396","endLine":3,"endColumn":54},{"ruleId":"393","severity":1,"message":"436","line":4,"column":10,"nodeType":"395","messageId":"396","endLine":4,"endColumn":24},{"ruleId":"393","severity":1,"message":"457","line":4,"column":26,"nodeType":"395","messageId":"396","endLine":4,"endColumn":41},{"ruleId":"393","severity":1,"message":"458","line":4,"column":43,"nodeType":"395","messageId":"396","endLine":4,"endColumn":55},{"ruleId":"393","severity":1,"message":"459","line":4,"column":57,"nodeType":"395","messageId":"396","endLine":4,"endColumn":69},{"ruleId":"393","severity":1,"message":"460","line":1,"column":17,"nodeType":"395","messageId":"396","endLine":1,"endColumn":26},{"ruleId":"393","severity":1,"message":"459","line":5,"column":57,"nodeType":"395","messageId":"396","endLine":5,"endColumn":69},{"ruleId":"393","severity":1,"message":"436","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":24},{"ruleId":"393","severity":1,"message":"422","line":4,"column":16,"nodeType":"395","messageId":"396","endLine":4,"endColumn":24},{"ruleId":"461","severity":1,"message":"462","line":9,"column":3,"nodeType":"463","messageId":"464","endLine":11,"endColumn":4},{"ruleId":"393","severity":1,"message":"440","line":36,"column":11,"nodeType":"395","messageId":"396","endLine":36,"endColumn":17},{"ruleId":"461","severity":1,"message":"462","line":14,"column":3,"nodeType":"463","messageId":"464","endLine":16,"endColumn":4},{"ruleId":"393","severity":1,"message":"465","line":2,"column":10,"nodeType":"395","messageId":"396","endLine":2,"endColumn":16},{"ruleId":"393","severity":1,"message":"466","line":4,"column":35,"nodeType":"395","messageId":"396","endLine":4,"endColumn":49},{"ruleId":"393","severity":1,"message":"416","line":5,"column":10,"nodeType":"395","messageId":"396","endLine":5,"endColumn":22},{"ruleId":"393","severity":1,"message":"467","line":8,"column":21,"nodeType":"395","messageId":"396","endLine":8,"endColumn":33},{"ruleId":"393","severity":1,"message":"468","line":9,"column":8,"nodeType":"395","messageId":"396","endLine":9,"endColumn":15},{"ruleId":"393","severity":1,"message":"469","line":74,"column":75,"nodeType":"395","messageId":"396","endLine":74,"endColumn":83},{"ruleId":"470","severity":1,"message":"471","line":159,"column":5,"nodeType":"472","messageId":"473","endLine":168,"endColumn":6},{"ruleId":"474","severity":1,"message":"475","line":161,"column":9,"nodeType":"476","messageId":"477","endLine":161,"endColumn":15},{"ruleId":"474","severity":1,"message":"475","line":163,"column":9,"nodeType":"476","messageId":"477","endLine":163,"endColumn":15},{"ruleId":"474","severity":1,"message":"475","line":165,"column":9,"nodeType":"476","messageId":"477","endLine":165,"endColumn":15},{"ruleId":"474","severity":1,"message":"475","line":167,"column":9,"nodeType":"476","messageId":"477","endLine":167,"endColumn":15},{"ruleId":"393","severity":1,"message":"411","line":2,"column":10,"nodeType":"395","messageId":"396","endLine":2,"endColumn":13},{"ruleId":"393","severity":1,"message":"412","line":2,"column":15,"nodeType":"395","messageId":"396","endLine":2,"endColumn":18},{"ruleId":"393","severity":1,"message":"413","line":2,"column":20,"nodeType":"395","messageId":"396","endLine":2,"endColumn":25},{"ruleId":"393","severity":1,"message":"415","line":2,"column":44,"nodeType":"395","messageId":"396","endLine":2,"endColumn":48},{"ruleId":"393","severity":1,"message":"406","line":2,"column":58,"nodeType":"395","messageId":"396","endLine":2,"endColumn":65},{"ruleId":"393","severity":1,"message":"428","line":2,"column":76,"nodeType":"395","messageId":"396","endLine":2,"endColumn":82},{"ruleId":"393","severity":1,"message":"478","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":25},{"ruleId":"479","severity":1,"message":"480","line":33,"column":16,"nodeType":"481","messageId":"482","endLine":33,"endColumn":18},{"ruleId":"393","severity":1,"message":"442","line":8,"column":10,"nodeType":"395","messageId":"396","endLine":8,"endColumn":17},{"ruleId":"393","severity":1,"message":"424","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":16},{"ruleId":"393","severity":1,"message":"483","line":4,"column":24,"nodeType":"395","messageId":"396","endLine":4,"endColumn":35},{"ruleId":"393","severity":1,"message":"484","line":6,"column":8,"nodeType":"395","messageId":"396","endLine":6,"endColumn":12},{"ruleId":"393","severity":1,"message":"485","line":2,"column":26,"nodeType":"395","messageId":"396","endLine":2,"endColumn":41},{"ruleId":"393","severity":1,"message":"486","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":21},{"ruleId":"393","severity":1,"message":"487","line":3,"column":23,"nodeType":"395","messageId":"396","endLine":3,"endColumn":29},{"ruleId":"393","severity":1,"message":"488","line":4,"column":10,"nodeType":"395","messageId":"396","endLine":4,"endColumn":18},{"ruleId":"393","severity":1,"message":"467","line":6,"column":21,"nodeType":"395","messageId":"396","endLine":6,"endColumn":33},{"ruleId":"393","severity":1,"message":"431","line":10,"column":5,"nodeType":"395","messageId":"396","endLine":10,"endColumn":15},{"ruleId":"393","severity":1,"message":"489","line":11,"column":5,"nodeType":"395","messageId":"396","endLine":11,"endColumn":13},{"ruleId":"393","severity":1,"message":"430","line":12,"column":5,"nodeType":"395","messageId":"396","endLine":12,"endColumn":11},{"ruleId":"393","severity":1,"message":"490","line":35,"column":5,"nodeType":"395","messageId":"396","endLine":35,"endColumn":14},{"ruleId":"393","severity":1,"message":"491","line":36,"column":5,"nodeType":"395","messageId":"396","endLine":36,"endColumn":8},{"ruleId":"393","severity":1,"message":"492","line":39,"column":5,"nodeType":"395","messageId":"396","endLine":39,"endColumn":13},{"ruleId":"474","severity":1,"message":"475","line":102,"column":9,"nodeType":"493","messageId":"477","endLine":156,"endColumn":10},{"ruleId":"494","severity":1,"message":"495","line":104,"column":47,"nodeType":"496","messageId":"497","endLine":104,"endColumn":48,"suggestions":"498"},{"ruleId":"474","severity":1,"message":"475","line":152,"column":21,"nodeType":"499","messageId":"477","endLine":154,"endColumn":10},{"ruleId":"474","severity":1,"message":"475","line":154,"column":19,"nodeType":"499","messageId":"477","endLine":156,"endColumn":10},{"ruleId":"474","severity":1,"message":"475","line":160,"column":9,"nodeType":"493","messageId":"477","endLine":202,"endColumn":11},{"ruleId":"474","severity":1,"message":"475","line":207,"column":9,"nodeType":"493","messageId":"477","endLine":213,"endColumn":12},{"ruleId":"474","severity":1,"message":"475","line":214,"column":9,"nodeType":"500","messageId":"477","endLine":214,"endColumn":41},{"ruleId":"393","severity":1,"message":"501","line":67,"column":11,"nodeType":"395","messageId":"396","endLine":67,"endColumn":18},{"ruleId":"502","severity":1,"message":"503","line":73,"column":79,"nodeType":"481","messageId":"504","endLine":73,"endColumn":80},{"ruleId":"502","severity":1,"message":"503","line":87,"column":56,"nodeType":"481","messageId":"504","endLine":87,"endColumn":57},{"ruleId":"393","severity":1,"message":"505","line":112,"column":11,"nodeType":"395","messageId":"396","endLine":112,"endColumn":27},{"ruleId":"502","severity":1,"message":"503","line":112,"column":46,"nodeType":"481","messageId":"504","endLine":112,"endColumn":47},{"ruleId":"393","severity":1,"message":"506","line":68,"column":11,"nodeType":"395","messageId":"396","endLine":68,"endColumn":18},{"ruleId":"393","severity":1,"message":"394","line":2,"column":8,"nodeType":"395","messageId":"396","endLine":2,"endColumn":11},{"ruleId":"393","severity":1,"message":"507","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":19},{"ruleId":"393","severity":1,"message":"467","line":3,"column":21,"nodeType":"395","messageId":"396","endLine":3,"endColumn":33},{"ruleId":"393","severity":1,"message":"508","line":3,"column":35,"nodeType":"395","messageId":"396","endLine":3,"endColumn":46},{"ruleId":"393","severity":1,"message":"489","line":1,"column":22,"nodeType":"395","messageId":"396","endLine":1,"endColumn":30},{"ruleId":"393","severity":1,"message":"394","line":2,"column":8,"nodeType":"395","messageId":"396","endLine":2,"endColumn":11},{"ruleId":"393","severity":1,"message":"507","line":3,"column":10,"nodeType":"395","messageId":"396","endLine":3,"endColumn":19},{"ruleId":"393","severity":1,"message":"467","line":3,"column":21,"nodeType":"395","messageId":"396","endLine":3,"endColumn":33},{"ruleId":"393","severity":1,"message":"508","line":3,"column":35,"nodeType":"395","messageId":"396","endLine":3,"endColumn":46},{"ruleId":"502","severity":1,"message":"503","line":91,"column":46,"nodeType":"481","messageId":"504","endLine":91,"endColumn":47},{"ruleId":"502","severity":1,"message":"503","line":91,"column":75,"nodeType":"481","messageId":"504","endLine":91,"endColumn":76},"no-unused-vars","'css' is defined but never used.","Identifier","unusedVar","'configure' is defined but never used.","no-native-reassign",["509"],"no-negated-in-lhs",["510"],"'logo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Tooltip' is defined but never used.","'EnvironmentOutlined' is defined but never used.","'Search' is assigned a value but never used.","'Option' is assigned a value but never used.","'Notice' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Input' is defined but never used.","'Popover' is defined but never used.","'Menu' is defined but never used.","'UserOutlined' is defined but never used.","'url' is assigned a value but never used.","'NavLink' is defined but never used.","'AreaChartOutlined' is defined but never used.","'TeamOutlined' is defined but never used.","'SubMenu' is assigned a value but never used.","'Skeleton' is defined but never used.","'Space' is defined but never used.","'Switch' is defined but never used.","'DataAnalysize' is defined but never used.","'div' is assigned a value but never used.","'Upload' is defined but never used.","'Select' is defined but never used.","'observe' is defined but never used.","'action' is defined but never used.","'observable' is defined but never used.","'runInAction' is defined but never used.","'register' is defined but never used.","'TabPane' is assigned a value but never used.","'Popconfirm' is defined but never used.","'DeleteOutlined' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'observer' is defined but never used.","'confirm' is assigned a value but never used.","'userId' is assigned a value but never used.","'loadMore' is assigned a value but never used.","'Divider' is defined but never used.","'Empty' is defined but never used.","'handleApply' is defined but never used.","'websocket' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'Tabs' is defined but never used.","'Radio' is defined but never used.","'Tag' is defined but never used.","'login' is defined but never used.","'file' is assigned a value but never used.","'List' is defined but never used.","'Avatar' is defined but never used.","'MessageOutlined' is defined but never used.","'LikeOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'Component' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Button' is defined but never used.","'updateUserInfo' is defined but never used.","'getTagColors' is defined but never used.","'TagList' is defined but never used.","'fileList' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'UserAddOutlined' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getLocation' is defined but never used.","'Bmap' is defined but never used.","'getTextKeyWords' is defined but never used.","'getKeyWords' is defined but never used.","'getUrl' is defined but never used.","'getInfos' is defined but never used.","'computed' is defined but never used.","'ROOT_PATH' is assigned a value but never used.","'app' is assigned a value but never used.","'formdata' is assigned a value but never used.","VariableDeclaration","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["511","512"],"BlockStatement","ExpressionStatement","'payload' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Call_Information' is assigned a value but never used.","'req_url' is assigned a value but never used.","'getColors' is defined but never used.","'getFontsize' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"513","fix":"514","desc":"515"},{"messageId":"516","fix":"517","desc":"518"},"removeEscape",{"range":"519","text":"520"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"521","text":"522"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2815,2816],"",[2815,2815],"\\"]